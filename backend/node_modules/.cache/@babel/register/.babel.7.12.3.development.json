{
  "{\"sourceRoot\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\",\"filename\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\\\\src\\\\server.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\cchewning\\Documents\\react-four\\backend",
      "filename": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\src\\server.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\cchewning\\Documents\\react-four\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\src\\server.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\src\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\src\\",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n//import bodyParser from 'body-parser'; don't need b.c of the new version of express.\n//import { MongoClient } from 'mongodb'; //can connect to local db\nvar mongoose = require('mongoose'); //helps us connect to mongodb database\n\n\nrequire('dotenv').config(); //env variables can be in the dotenv file.\n\n\nvar app = (0, _express[\"default\"])();\nvar port = process.env.port || 8000;\n\nvar cors = require('cors'); //middleware\n\n\napp.use(cors());\napp.use(_express[\"default\"].json()); //app.use(bodyParser.json());\n\nvar uri = process.env.ATLAS_URI;\nconsole.log(uri); //mongoose.connect(uri, { useNewUrlParser: true; useCreateIndex: true; }); //FLAGS: mongodb nodejs driver parses the connection string. useCreateIndex: mongodb deprecating ensure index fn\n\nmongoose.connect(uri, {\n  useNewUrlParser: true,\n  useCreateIndex: true,\n  useUnifiedTopology: true\n});\nvar client = mongoose.connection;\nclient.once('open', function () {\n  console.log(\"MongoDB is connected.\");\n}); //require the files and use them.\n\nvar usersRouter = require('../routes/users');\n\nvar postsRouter = require('../routes/posts');\n\nvar commentsRouter = require('../routes/comments');\n\nvar breweriesRouter = require('../routes/breweries');\n\napp.use('/users', usersRouter); // means /users is the base route\n\napp.use('/api/community', commentsRouter);\napp.use('/api/brewery', breweriesRouter);\napp.use('/api/community/posts', postsRouter);\napp.listen(port, function () {\n  return console.log('Listening on port 8000');\n}); //argument to specify which port to listen on. then a callback\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJjb25maWciLCJhcHAiLCJwb3J0IiwicHJvY2VzcyIsImVudiIsImNvcnMiLCJ1c2UiLCJleHByZXNzIiwianNvbiIsInVyaSIsIkFUTEFTX1VSSSIsImNvbnNvbGUiLCJsb2ciLCJjb25uZWN0IiwidXNlTmV3VXJsUGFyc2VyIiwidXNlQ3JlYXRlSW5kZXgiLCJ1c2VVbmlmaWVkVG9wb2xvZ3kiLCJjbGllbnQiLCJjb25uZWN0aW9uIiwib25jZSIsInVzZXJzUm91dGVyIiwicG9zdHNSb3V0ZXIiLCJjb21tZW50c1JvdXRlciIsImJyZXdlcmllc1JvdXRlciIsImxpc3RlbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7OztBQUNBO0FBQ0E7QUFDQSxJQUFNQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXhCLEMsQ0FBc0M7OztBQUV0Q0EsT0FBTyxDQUFDLFFBQUQsQ0FBUCxDQUFrQkMsTUFBbEIsRyxDQUE0Qjs7O0FBRzVCLElBQU1DLEdBQUcsR0FBRywwQkFBWjtBQUNBLElBQU1DLElBQUksR0FBR0MsT0FBTyxDQUFDQyxHQUFSLENBQVlGLElBQVosSUFBb0IsSUFBakM7O0FBQ0EsSUFBTUcsSUFBSSxHQUFHTixPQUFPLENBQUMsTUFBRCxDQUFwQixDLENBRUE7OztBQUNBRSxHQUFHLENBQUNLLEdBQUosQ0FBUUQsSUFBSSxFQUFaO0FBQ0FKLEdBQUcsQ0FBQ0ssR0FBSixDQUFRQyxvQkFBUUMsSUFBUixFQUFSLEUsQ0FDQTs7QUFFQSxJQUFNQyxHQUFHLEdBQUdOLE9BQU8sQ0FBQ0MsR0FBUixDQUFZTSxTQUF4QjtBQUNBQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUgsR0FBWixFLENBQ0E7O0FBRUFYLFFBQVEsQ0FBQ2UsT0FBVCxDQUFpQkosR0FBakIsRUFBc0I7QUFBRUssRUFBQUEsZUFBZSxFQUFFLElBQW5CO0FBQXlCQyxFQUFBQSxjQUFjLEVBQUUsSUFBekM7QUFBZ0RDLEVBQUFBLGtCQUFrQixFQUFFO0FBQXBFLENBQXRCO0FBQ0EsSUFBTUMsTUFBTSxHQUFHbkIsUUFBUSxDQUFDb0IsVUFBeEI7QUFFQUQsTUFBTSxDQUFDRSxJQUFQLENBQVksTUFBWixFQUFvQixZQUFNO0FBQ3hCUixFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSx1QkFBWjtBQUNELENBRkQsRSxDQU1BOztBQUNBLElBQU1RLFdBQVcsR0FBR3JCLE9BQU8sQ0FBQyxpQkFBRCxDQUEzQjs7QUFDQSxJQUFNc0IsV0FBVyxHQUFHdEIsT0FBTyxDQUFDLGlCQUFELENBQTNCOztBQUNBLElBQU11QixjQUFjLEdBQUd2QixPQUFPLENBQUMsb0JBQUQsQ0FBOUI7O0FBQ0EsSUFBTXdCLGVBQWUsR0FBR3hCLE9BQU8sQ0FBQyxxQkFBRCxDQUEvQjs7QUFFQUUsR0FBRyxDQUFDSyxHQUFKLENBQVEsUUFBUixFQUFrQmMsV0FBbEIsRSxDQUFnQzs7QUFDaENuQixHQUFHLENBQUNLLEdBQUosQ0FBUSxnQkFBUixFQUEwQmdCLGNBQTFCO0FBQ0FyQixHQUFHLENBQUNLLEdBQUosQ0FBUSxjQUFSLEVBQXdCaUIsZUFBeEI7QUFDQXRCLEdBQUcsQ0FBQ0ssR0FBSixDQUFRLHNCQUFSLEVBQWdDZSxXQUFoQztBQUVBcEIsR0FBRyxDQUFDdUIsTUFBSixDQUFXdEIsSUFBWCxFQUFpQjtBQUFBLFNBQU1TLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHdCQUFaLENBQU47QUFBQSxDQUFqQixFLENBQWdFIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcY2NoZXduaW5nXFxEb2N1bWVudHNcXHJlYWN0LWZvdXJcXGJhY2tlbmRcXHNyY1xcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XHJcbi8vaW1wb3J0IGJvZHlQYXJzZXIgZnJvbSAnYm9keS1wYXJzZXInOyBkb24ndCBuZWVkIGIuYyBvZiB0aGUgbmV3IHZlcnNpb24gb2YgZXhwcmVzcy5cclxuLy9pbXBvcnQgeyBNb25nb0NsaWVudCB9IGZyb20gJ21vbmdvZGInOyAvL2NhbiBjb25uZWN0IHRvIGxvY2FsIGRiXHJcbmNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTsgLy9oZWxwcyB1cyBjb25uZWN0IHRvIG1vbmdvZGIgZGF0YWJhc2VcclxuXHJcbnJlcXVpcmUoJ2RvdGVudicpLmNvbmZpZygpOyAvL2VudiB2YXJpYWJsZXMgY2FuIGJlIGluIHRoZSBkb3RlbnYgZmlsZS5cclxuXHJcblxyXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XHJcbmNvbnN0IHBvcnQgPSBwcm9jZXNzLmVudi5wb3J0IHx8IDgwMDA7XHJcbmNvbnN0IGNvcnMgPSByZXF1aXJlKCdjb3JzJyk7XHJcblxyXG4vL21pZGRsZXdhcmVcclxuYXBwLnVzZShjb3JzKCkpO1xyXG5hcHAudXNlKGV4cHJlc3MuanNvbigpKTtcclxuLy9hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcclxuXHJcbmNvbnN0IHVyaSA9IHByb2Nlc3MuZW52LkFUTEFTX1VSSTtcclxuY29uc29sZS5sb2codXJpKTtcclxuLy9tb25nb29zZS5jb25uZWN0KHVyaSwgeyB1c2VOZXdVcmxQYXJzZXI6IHRydWU7IHVzZUNyZWF0ZUluZGV4OiB0cnVlOyB9KTsgLy9GTEFHUzogbW9uZ29kYiBub2RlanMgZHJpdmVyIHBhcnNlcyB0aGUgY29ubmVjdGlvbiBzdHJpbmcuIHVzZUNyZWF0ZUluZGV4OiBtb25nb2RiIGRlcHJlY2F0aW5nIGVuc3VyZSBpbmRleCBmblxyXG5cclxubW9uZ29vc2UuY29ubmVjdCh1cmksIHsgdXNlTmV3VXJsUGFyc2VyOiB0cnVlLCB1c2VDcmVhdGVJbmRleDogdHJ1ZSwgIHVzZVVuaWZpZWRUb3BvbG9neTogdHJ1ZSB9KTtcclxuY29uc3QgY2xpZW50ID0gbW9uZ29vc2UuY29ubmVjdGlvbjtcclxuXHJcbmNsaWVudC5vbmNlKCdvcGVuJywgKCkgPT4ge1xyXG4gIGNvbnNvbGUubG9nKFwiTW9uZ29EQiBpcyBjb25uZWN0ZWQuXCIpXHJcbn0pXHJcblxyXG5cclxuXHJcbi8vcmVxdWlyZSB0aGUgZmlsZXMgYW5kIHVzZSB0aGVtLlxyXG5jb25zdCB1c2Vyc1JvdXRlciA9IHJlcXVpcmUoJy4uL3JvdXRlcy91c2VycycpO1xyXG5jb25zdCBwb3N0c1JvdXRlciA9IHJlcXVpcmUoJy4uL3JvdXRlcy9wb3N0cycpO1xyXG5jb25zdCBjb21tZW50c1JvdXRlciA9IHJlcXVpcmUoJy4uL3JvdXRlcy9jb21tZW50cycpO1xyXG5jb25zdCBicmV3ZXJpZXNSb3V0ZXIgPSByZXF1aXJlKCcuLi9yb3V0ZXMvYnJld2VyaWVzJyk7XHJcblxyXG5hcHAudXNlKCcvdXNlcnMnLCB1c2Vyc1JvdXRlcik7IC8vIG1lYW5zIC91c2VycyBpcyB0aGUgYmFzZSByb3V0ZVxyXG5hcHAudXNlKCcvYXBpL2NvbW11bml0eScsIGNvbW1lbnRzUm91dGVyKTtcclxuYXBwLnVzZSgnL2FwaS9icmV3ZXJ5JywgYnJld2VyaWVzUm91dGVyKTtcclxuYXBwLnVzZSgnL2FwaS9jb21tdW5pdHkvcG9zdHMnLCBwb3N0c1JvdXRlcik7XHJcblxyXG5hcHAubGlzdGVuKHBvcnQsICgpID0+IGNvbnNvbGUubG9nKCdMaXN0ZW5pbmcgb24gcG9ydCA4MDAwJykpOyAgLy9hcmd1bWVudCB0byBzcGVjaWZ5IHdoaWNoIHBvcnQgdG8gbGlzdGVuIG9uLiB0aGVuIGEgY2FsbGJhY2tcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "mongoose",
        "require",
        "config",
        "app",
        "port",
        "process",
        "env",
        "cors",
        "use",
        "express",
        "json",
        "uri",
        "ATLAS_URI",
        "console",
        "log",
        "connect",
        "useNewUrlParser",
        "useCreateIndex",
        "useUnifiedTopology",
        "client",
        "connection",
        "once",
        "usersRouter",
        "postsRouter",
        "commentsRouter",
        "breweriesRouter",
        "listen"
      ],
      "mappings": ";;AAAA;;;;AACA;AACA;AACA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB,C,CAAsC;;;AAEtCA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB,G,CAA4B;;;AAG5B,IAAMC,GAAG,GAAG,0BAAZ;AACA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;;AACA,IAAMG,IAAI,GAAGN,OAAO,CAAC,MAAD,CAApB,C,CAEA;;;AACAE,GAAG,CAACK,GAAJ,CAAQD,IAAI,EAAZ;AACAJ,GAAG,CAACK,GAAJ,CAAQC,oBAAQC,IAAR,EAAR,E,CACA;;AAEA,IAAMC,GAAG,GAAGN,OAAO,CAACC,GAAR,CAAYM,SAAxB;AACAC,OAAO,CAACC,GAAR,CAAYH,GAAZ,E,CACA;;AAEAX,QAAQ,CAACe,OAAT,CAAiBJ,GAAjB,EAAsB;AAAEK,EAAAA,eAAe,EAAE,IAAnB;AAAyBC,EAAAA,cAAc,EAAE,IAAzC;AAAgDC,EAAAA,kBAAkB,EAAE;AAApE,CAAtB;AACA,IAAMC,MAAM,GAAGnB,QAAQ,CAACoB,UAAxB;AAEAD,MAAM,CAACE,IAAP,CAAY,MAAZ,EAAoB,YAAM;AACxBR,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD,CAFD,E,CAMA;;AACA,IAAMQ,WAAW,GAAGrB,OAAO,CAAC,iBAAD,CAA3B;;AACA,IAAMsB,WAAW,GAAGtB,OAAO,CAAC,iBAAD,CAA3B;;AACA,IAAMuB,cAAc,GAAGvB,OAAO,CAAC,oBAAD,CAA9B;;AACA,IAAMwB,eAAe,GAAGxB,OAAO,CAAC,qBAAD,CAA/B;;AAEAE,GAAG,CAACK,GAAJ,CAAQ,QAAR,EAAkBc,WAAlB,E,CAAgC;;AAChCnB,GAAG,CAACK,GAAJ,CAAQ,gBAAR,EAA0BgB,cAA1B;AACArB,GAAG,CAACK,GAAJ,CAAQ,cAAR,EAAwBiB,eAAxB;AACAtB,GAAG,CAACK,GAAJ,CAAQ,sBAAR,EAAgCe,WAAhC;AAEApB,GAAG,CAACuB,MAAJ,CAAWtB,IAAX,EAAiB;AAAA,SAAMS,OAAO,CAACC,GAAR,CAAY,wBAAZ,CAAN;AAAA,CAAjB,E,CAAgE",
      "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\src\\",
      "sourcesContent": [
        "import express from 'express';\r\n//import bodyParser from 'body-parser'; don't need b.c of the new version of express.\r\n//import { MongoClient } from 'mongodb'; //can connect to local db\r\nconst mongoose = require('mongoose'); //helps us connect to mongodb database\r\n\r\nrequire('dotenv').config(); //env variables can be in the dotenv file.\r\n\r\n\r\nconst app = express();\r\nconst port = process.env.port || 8000;\r\nconst cors = require('cors');\r\n\r\n//middleware\r\napp.use(cors());\r\napp.use(express.json());\r\n//app.use(bodyParser.json());\r\n\r\nconst uri = process.env.ATLAS_URI;\r\nconsole.log(uri);\r\n//mongoose.connect(uri, { useNewUrlParser: true; useCreateIndex: true; }); //FLAGS: mongodb nodejs driver parses the connection string. useCreateIndex: mongodb deprecating ensure index fn\r\n\r\nmongoose.connect(uri, { useNewUrlParser: true, useCreateIndex: true,  useUnifiedTopology: true });\r\nconst client = mongoose.connection;\r\n\r\nclient.once('open', () => {\r\n  console.log(\"MongoDB is connected.\")\r\n})\r\n\r\n\r\n\r\n//require the files and use them.\r\nconst usersRouter = require('../routes/users');\r\nconst postsRouter = require('../routes/posts');\r\nconst commentsRouter = require('../routes/comments');\r\nconst breweriesRouter = require('../routes/breweries');\r\n\r\napp.use('/users', usersRouter); // means /users is the base route\r\napp.use('/api/community', commentsRouter);\r\napp.use('/api/brewery', breweriesRouter);\r\napp.use('/api/community/posts', postsRouter);\r\n\r\napp.listen(port, () => console.log('Listening on port 8000'));  //argument to specify which port to listen on. then a callback\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1605733514736
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\",\"filename\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\\\\routes\\\\users.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\cchewning\\Documents\\react-four\\backend",
      "filename": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\users.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\cchewning\\Documents\\react-four\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\users.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\",
        "sourceFileName": "users.js"
      }
    },
    "ast": null,
    "code": "const router = require('express').Router();\n\nlet User = require('../models/user.model'); //GET ALL USERS\n\n\nrouter.route('/').get((req, res) => {\n  User.find().then(users => res.json(users)).catch(err => res.status(400).json('Error ' + err));\n}); //ADD USER\n\nrouter.route('/adduser').post((req, res) => {\n  const username = req.body.username;\n  const email = req.body.email;\n  const password = req.body.password;\n  const passwordConfirm = req.body.passwordConfirm;\n\n  if (password !== passwordConfirm) {\n    return res.status(400).json({\n      msg: 'Passwords do not match'\n    });\n  }\n\n  const newUser = new User({\n    username,\n    email,\n    password,\n    passwordConfirm\n  });\n  newUser.save().then(() => res.json('User added')).catch(err => res.status(400).json('Error ' + err));\n}); //DELETE USER\n\nrouter.route('/:id').delete((req, res) => {\n  User.findByIdAndDelete(req.params.id).then(() => res.json('User deleted.')).catch(err => res.status(400).json('Error: ' + err));\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsInJlcXVpcmUiLCJSb3V0ZXIiLCJVc2VyIiwicm91dGUiLCJnZXQiLCJyZXEiLCJyZXMiLCJmaW5kIiwidGhlbiIsInVzZXJzIiwianNvbiIsImNhdGNoIiwiZXJyIiwic3RhdHVzIiwicG9zdCIsInVzZXJuYW1lIiwiYm9keSIsImVtYWlsIiwicGFzc3dvcmQiLCJwYXNzd29yZENvbmZpcm0iLCJtc2ciLCJuZXdVc2VyIiwic2F2ZSIsImRlbGV0ZSIsImZpbmRCeUlkQW5kRGVsZXRlIiwicGFyYW1zIiwiaWQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQVAsQ0FBbUJDLE1BQW5CLEVBQWY7O0FBQ0EsSUFBSUMsSUFBSSxHQUFHRixPQUFPLENBQUMsc0JBQUQsQ0FBbEIsQyxDQUlBOzs7QUFDQUQsTUFBTSxDQUFDSSxLQUFQLENBQWEsR0FBYixFQUFrQkMsR0FBbEIsQ0FBc0IsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEtBQWM7QUFDbENKLEVBQUFBLElBQUksQ0FBQ0ssSUFBTCxHQUNDQyxJQURELENBQ01DLEtBQUssSUFBSUgsR0FBRyxDQUFDSSxJQUFKLENBQVNELEtBQVQsQ0FEZixFQUVDRSxLQUZELENBRU9DLEdBQUcsSUFBSU4sR0FBRyxDQUFDTyxNQUFKLENBQVcsR0FBWCxFQUFnQkgsSUFBaEIsQ0FBcUIsV0FBV0UsR0FBaEMsQ0FGZDtBQUdELENBSkQsRSxDQU1BOztBQUNBYixNQUFNLENBQUNJLEtBQVAsQ0FBYSxVQUFiLEVBQXlCVyxJQUF6QixDQUE4QixDQUFDVCxHQUFELEVBQU1DLEdBQU4sS0FBYztBQUMxQyxRQUFNUyxRQUFRLEdBQUdWLEdBQUcsQ0FBQ1csSUFBSixDQUFTRCxRQUExQjtBQUNBLFFBQU1FLEtBQUssR0FBR1osR0FBRyxDQUFDVyxJQUFKLENBQVNDLEtBQXZCO0FBQ0EsUUFBTUMsUUFBUSxHQUFHYixHQUFHLENBQUNXLElBQUosQ0FBU0UsUUFBMUI7QUFDQSxRQUFNQyxlQUFlLEdBQUdkLEdBQUcsQ0FBQ1csSUFBSixDQUFTRyxlQUFqQzs7QUFFQSxNQUFJRCxRQUFRLEtBQUtDLGVBQWpCLEVBQWlDO0FBQy9CLFdBQU9iLEdBQUcsQ0FBQ08sTUFBSixDQUFXLEdBQVgsRUFBZ0JILElBQWhCLENBQXFCO0FBQUVVLE1BQUFBLEdBQUcsRUFBRTtBQUFQLEtBQXJCLENBQVA7QUFDRDs7QUFFRCxRQUFNQyxPQUFPLEdBQUcsSUFBSW5CLElBQUosQ0FBUztBQUN2QmEsSUFBQUEsUUFEdUI7QUFFdkJFLElBQUFBLEtBRnVCO0FBR3ZCQyxJQUFBQSxRQUh1QjtBQUl2QkMsSUFBQUE7QUFKdUIsR0FBVCxDQUFoQjtBQU9BRSxFQUFBQSxPQUFPLENBQUNDLElBQVIsR0FDQ2QsSUFERCxDQUNNLE1BQU1GLEdBQUcsQ0FBQ0ksSUFBSixDQUFTLFlBQVQsQ0FEWixFQUVDQyxLQUZELENBRU9DLEdBQUcsSUFBSU4sR0FBRyxDQUFDTyxNQUFKLENBQVcsR0FBWCxFQUFnQkgsSUFBaEIsQ0FBcUIsV0FBVUUsR0FBL0IsQ0FGZDtBQUdELENBcEJELEUsQ0F1QkE7O0FBQ0FiLE1BQU0sQ0FBQ0ksS0FBUCxDQUFhLE1BQWIsRUFBcUJvQixNQUFyQixDQUE0QixDQUFDbEIsR0FBRCxFQUFNQyxHQUFOLEtBQWM7QUFDeENKLEVBQUFBLElBQUksQ0FBQ3NCLGlCQUFMLENBQXVCbkIsR0FBRyxDQUFDb0IsTUFBSixDQUFXQyxFQUFsQyxFQUNDbEIsSUFERCxDQUNNLE1BQU1GLEdBQUcsQ0FBQ0ksSUFBSixDQUFTLGVBQVQsQ0FEWixFQUVDQyxLQUZELENBRU9DLEdBQUcsSUFBSU4sR0FBRyxDQUFDTyxNQUFKLENBQVcsR0FBWCxFQUFnQkgsSUFBaEIsQ0FBcUIsWUFBWUUsR0FBakMsQ0FGZDtBQUdELENBSkQ7QUFPQWUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCN0IsTUFBakIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxjY2hld25pbmdcXERvY3VtZW50c1xccmVhY3QtZm91clxcYmFja2VuZFxccm91dGVzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCByb3V0ZXIgPSByZXF1aXJlKCdleHByZXNzJykuUm91dGVyKCk7XHJcbmxldCBVc2VyID0gcmVxdWlyZSgnLi4vbW9kZWxzL3VzZXIubW9kZWwnKTtcclxuXHJcblxyXG5cclxuLy9HRVQgQUxMIFVTRVJTXHJcbnJvdXRlci5yb3V0ZSgnLycpLmdldCgocmVxLCByZXMpID0+IHtcclxuICBVc2VyLmZpbmQoKVxyXG4gIC50aGVuKHVzZXJzID0+IHJlcy5qc29uKHVzZXJzKSlcclxuICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNDAwKS5qc29uKCdFcnJvciAnICsgZXJyKSlcclxufSlcclxuXHJcbi8vQUREIFVTRVJcclxucm91dGVyLnJvdXRlKCcvYWRkdXNlcicpLnBvc3QoKHJlcSwgcmVzKSA9PiB7XHJcbiAgY29uc3QgdXNlcm5hbWUgPSByZXEuYm9keS51c2VybmFtZTtcclxuICBjb25zdCBlbWFpbCA9IHJlcS5ib2R5LmVtYWlsO1xyXG4gIGNvbnN0IHBhc3N3b3JkID0gcmVxLmJvZHkucGFzc3dvcmQ7XHJcbiAgY29uc3QgcGFzc3dvcmRDb25maXJtID0gcmVxLmJvZHkucGFzc3dvcmRDb25maXJtO1xyXG5cclxuICBpZiAocGFzc3dvcmQgIT09IHBhc3N3b3JkQ29uZmlybSl7XHJcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oeyBtc2c6ICdQYXNzd29yZHMgZG8gbm90IG1hdGNoJyB9KTtcclxuICB9XHJcblxyXG4gIGNvbnN0IG5ld1VzZXIgPSBuZXcgVXNlcih7XHJcbiAgICB1c2VybmFtZSxcclxuICAgIGVtYWlsLFxyXG4gICAgcGFzc3dvcmQsXHJcbiAgICBwYXNzd29yZENvbmZpcm0sXHJcbiAgfSk7XHJcblxyXG4gIG5ld1VzZXIuc2F2ZSgpXHJcbiAgLnRoZW4oKCkgPT4gcmVzLmpzb24oJ1VzZXIgYWRkZWQnKSlcclxuICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNDAwKS5qc29uKCdFcnJvciAnICtlcnIpKTtcclxufSk7XHJcblxyXG5cclxuLy9ERUxFVEUgVVNFUlxyXG5yb3V0ZXIucm91dGUoJy86aWQnKS5kZWxldGUoKHJlcSwgcmVzKSA9PiB7XHJcbiAgVXNlci5maW5kQnlJZEFuZERlbGV0ZShyZXEucGFyYW1zLmlkKVxyXG4gIC50aGVuKCgpID0+IHJlcy5qc29uKCdVc2VyIGRlbGV0ZWQuJykpXHJcbiAgLmNhdGNoKGVyciA9PiByZXMuc3RhdHVzKDQwMCkuanNvbignRXJyb3I6ICcgKyBlcnIpKVxyXG59KVxyXG5cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gcm91dGVyO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "router",
        "require",
        "Router",
        "User",
        "route",
        "get",
        "req",
        "res",
        "find",
        "then",
        "users",
        "json",
        "catch",
        "err",
        "status",
        "post",
        "username",
        "body",
        "email",
        "password",
        "passwordConfirm",
        "msg",
        "newUser",
        "save",
        "delete",
        "findByIdAndDelete",
        "params",
        "id",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAP,CAAmBC,MAAnB,EAAf;;AACA,IAAIC,IAAI,GAAGF,OAAO,CAAC,sBAAD,CAAlB,C,CAIA;;;AACAD,MAAM,CAACI,KAAP,CAAa,GAAb,EAAkBC,GAAlB,CAAsB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAClCJ,EAAAA,IAAI,CAACK,IAAL,GACCC,IADD,CACMC,KAAK,IAAIH,GAAG,CAACI,IAAJ,CAASD,KAAT,CADf,EAECE,KAFD,CAEOC,GAAG,IAAIN,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB,WAAWE,GAAhC,CAFd;AAGD,CAJD,E,CAMA;;AACAb,MAAM,CAACI,KAAP,CAAa,UAAb,EAAyBW,IAAzB,CAA8B,CAACT,GAAD,EAAMC,GAAN,KAAc;AAC1C,QAAMS,QAAQ,GAAGV,GAAG,CAACW,IAAJ,CAASD,QAA1B;AACA,QAAME,KAAK,GAAGZ,GAAG,CAACW,IAAJ,CAASC,KAAvB;AACA,QAAMC,QAAQ,GAAGb,GAAG,CAACW,IAAJ,CAASE,QAA1B;AACA,QAAMC,eAAe,GAAGd,GAAG,CAACW,IAAJ,CAASG,eAAjC;;AAEA,MAAID,QAAQ,KAAKC,eAAjB,EAAiC;AAC/B,WAAOb,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEU,MAAAA,GAAG,EAAE;AAAP,KAArB,CAAP;AACD;;AAED,QAAMC,OAAO,GAAG,IAAInB,IAAJ,CAAS;AACvBa,IAAAA,QADuB;AAEvBE,IAAAA,KAFuB;AAGvBC,IAAAA,QAHuB;AAIvBC,IAAAA;AAJuB,GAAT,CAAhB;AAOAE,EAAAA,OAAO,CAACC,IAAR,GACCd,IADD,CACM,MAAMF,GAAG,CAACI,IAAJ,CAAS,YAAT,CADZ,EAECC,KAFD,CAEOC,GAAG,IAAIN,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB,WAAUE,GAA/B,CAFd;AAGD,CApBD,E,CAuBA;;AACAb,MAAM,CAACI,KAAP,CAAa,MAAb,EAAqBoB,MAArB,CAA4B,CAAClB,GAAD,EAAMC,GAAN,KAAc;AACxCJ,EAAAA,IAAI,CAACsB,iBAAL,CAAuBnB,GAAG,CAACoB,MAAJ,CAAWC,EAAlC,EACClB,IADD,CACM,MAAMF,GAAG,CAACI,IAAJ,CAAS,eAAT,CADZ,EAECC,KAFD,CAEOC,GAAG,IAAIN,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB,YAAYE,GAAjC,CAFd;AAGD,CAJD;AAOAe,MAAM,CAACC,OAAP,GAAiB7B,MAAjB",
      "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\",
      "sourcesContent": [
        "const router = require('express').Router();\r\nlet User = require('../models/user.model');\r\n\r\n\r\n\r\n//GET ALL USERS\r\nrouter.route('/').get((req, res) => {\r\n  User.find()\r\n  .then(users => res.json(users))\r\n  .catch(err => res.status(400).json('Error ' + err))\r\n})\r\n\r\n//ADD USER\r\nrouter.route('/adduser').post((req, res) => {\r\n  const username = req.body.username;\r\n  const email = req.body.email;\r\n  const password = req.body.password;\r\n  const passwordConfirm = req.body.passwordConfirm;\r\n\r\n  if (password !== passwordConfirm){\r\n    return res.status(400).json({ msg: 'Passwords do not match' });\r\n  }\r\n\r\n  const newUser = new User({\r\n    username,\r\n    email,\r\n    password,\r\n    passwordConfirm,\r\n  });\r\n\r\n  newUser.save()\r\n  .then(() => res.json('User added'))\r\n  .catch(err => res.status(400).json('Error ' +err));\r\n});\r\n\r\n\r\n//DELETE USER\r\nrouter.route('/:id').delete((req, res) => {\r\n  User.findByIdAndDelete(req.params.id)\r\n  .then(() => res.json('User deleted.'))\r\n  .catch(err => res.status(400).json('Error: ' + err))\r\n})\r\n\r\n\r\nmodule.exports = router;\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1606133977325
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\",\"filename\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\\\\routes\\\\comments.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\cchewning\\Documents\\react-four\\backend",
      "filename": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\comments.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\cchewning\\Documents\\react-four\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\comments.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\comments.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\",
        "sourceFileName": "comments.js"
      }
    },
    "ast": null,
    "code": "const router = require('express').Router();\n\nlet Comment = require('../models/comment.model');\n\nlet Post = require('../models/post.model'); //GET COMMENTS\n\n\nrouter.route('/brewery-meetup').get(async (req, res) => {\n  try {\n    //Comment.findOne({name: postName})\n    const postName = req.params.name; //postName gets name from url paramters\n\n    const postInfo = await Post.comments.find(); //matches name url paramter we passed. Mongo returns client object we can use to send queries to the db\n\n    res.status(200).json(postInfo); //instead of send, use json since we are working with json.\n  } catch (error) {\n    res.status(500).json({\n      message: 'Error',\n      error\n    });\n  }\n}); //GET ALL POSTS, COMMENTS AND UPVOTES\n//SEE EVERY COMMENT (working)\n\nrouter.route('/').get((req, res) => {\n  Comment.find().then(comments => res.json(comments)).catch(err => res.status(400).json('Error ' + err));\n});\nrouter.route('/brewery-meetup/test').get((req, res) => {\n  Comment.find().then(comments => res.json(comments)).catch(err => res.status(400).json('Error ' + err));\n}); //UPDATE A POST WITH A COMMENT\n\nrouter.route('/:id/add-comment').post(async (req, res) => {\n  const {\n    username,\n    votes,\n    comment\n  } = req.body;\n\n  try {\n    const postId = req.params.id; //set the req id to a variable\n\n    const saveCommentToPost = await Post.findById({\n      _id: postId\n    }); //.populate(User)//  //.populate(User) later\n\n    const post = await Post.updateOne({\n      _id: postId\n    }, {\n      //update the id that matches req.params.id (ex: brewery-meetup id)\n      '$set': {\n        comments: saveCommentToPost.comments.concat({\n          username,\n          votes,\n          comment\n        })\n      }\n    });\n    res.send(post);\n  } catch (err) {\n    res.status(400).send(err);\n  }\n});\nrouter.route('/:name/upvotes').post((req, res) => {\n  const postName = req.params.name; //postName gets name from url paramters\n\n  Comment.findOne({\n    name: postName\n  }) //change to Post\n  .then(comments => res.json(comments)).catch(err => res.status(400).json('Error ' + err));\n}); //UPVOTE ENDPOINT\n\nrouter.route('/:name/upvotes').post((req, res) => {\n  const postName = req.params.name;\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbW1lbnRzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsInJlcXVpcmUiLCJSb3V0ZXIiLCJDb21tZW50IiwiUG9zdCIsInJvdXRlIiwiZ2V0IiwicmVxIiwicmVzIiwicG9zdE5hbWUiLCJwYXJhbXMiLCJuYW1lIiwicG9zdEluZm8iLCJjb21tZW50cyIsImZpbmQiLCJzdGF0dXMiLCJqc29uIiwiZXJyb3IiLCJtZXNzYWdlIiwidGhlbiIsImNhdGNoIiwiZXJyIiwicG9zdCIsInVzZXJuYW1lIiwidm90ZXMiLCJjb21tZW50IiwiYm9keSIsInBvc3RJZCIsImlkIiwic2F2ZUNvbW1lbnRUb1Bvc3QiLCJmaW5kQnlJZCIsIl9pZCIsInVwZGF0ZU9uZSIsImNvbmNhdCIsInNlbmQiLCJmaW5kT25lIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsTUFBTSxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUFQLENBQW1CQyxNQUFuQixFQUFmOztBQUNBLElBQUlDLE9BQU8sR0FBR0YsT0FBTyxDQUFDLHlCQUFELENBQXJCOztBQUNBLElBQUlHLElBQUksR0FBR0gsT0FBTyxDQUFDLHNCQUFELENBQWxCLEMsQ0FFQTs7O0FBQ0FELE1BQU0sQ0FBQ0ssS0FBUCxDQUFhLGlCQUFiLEVBQWdDQyxHQUFoQyxDQUFvQyxPQUFPQyxHQUFQLEVBQVlDLEdBQVosS0FBb0I7QUFDdEQsTUFBSTtBQUNOO0FBRUUsVUFBTUMsUUFBUSxHQUFHRixHQUFHLENBQUNHLE1BQUosQ0FBV0MsSUFBNUIsQ0FISSxDQUc4Qjs7QUFDbEMsVUFBTUMsUUFBUSxHQUFHLE1BQU1SLElBQUksQ0FBQ1MsUUFBTCxDQUFjQyxJQUFkLEVBQXZCLENBSkksQ0FJeUM7O0FBQzdDTixJQUFBQSxHQUFHLENBQUNPLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQkosUUFBckIsRUFMSSxDQUs0QjtBQUNqQyxHQU5DLENBTUEsT0FBT0ssS0FBUCxFQUFjO0FBQ2RULElB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QUFoQyxDQUZkO0FBR0QsQ0FMRCxFLENBU0E7O0FBQ0FyQixNQUFNLENBQUNLLEtBQVAsQ0FBYSxnQkFBYixFQUErQmlCLElBQS9CLENBQW9DLENBQUNmLEdBQUQsRUFBTUMsR0FBTixLQUFjO0FBQ2hELFFBQU1DLFFBQVEsR0FBR0YsR0FBRyxDQUFDRyxNQUFKLENBQVdDLElBQTVCO0FBQ0QsQ0FGRDtBQUtBeUIsTUFBTSxDQUFDQyxPQUFQLEdBQWlCckMsTUFBakIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxjY2hld25pbmdcXERvY3VtZW50c1xccmVhY3QtZm91clxcYmFja2VuZFxccm91dGVzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCByb3V0ZXIgPSByZXF1aXJlKCdleHByZXNzJykuUm91dGVyKCk7XHJcbmxldCBDb21tZW50ID0gcmVxdWlyZSgnLi4vbW9kZWxzL2NvbW1lbnQubW9kZWwnKTtcclxubGV0IFBvc3QgPSByZXF1aXJlKCcuLi9tb2RlbHMvcG9zdC5tb2RlbCcpO1xyXG5cclxuLy9HRVQgQ09NTUVOVFNcclxucm91dGVyLnJvdXRlKCcvYnJld2VyeS1tZWV0dXAnKS5nZXQoYXN5bmMgKHJlcSwgcmVzKSA9PiB7XHJcbiAgdHJ5IHtcclxuLy9Db21tZW50LmZpbmRPbmUoe25hbWU6IHBvc3ROYW1lfSlcclxuXHJcbiAgY29uc3QgcG9zdE5hbWUgPSByZXEucGFyYW1zLm5hbWU7IC8vcG9zdE5hbWUgZ2V0cyBuYW1lIGZyb20gdXJsIHBhcmFtdGVyc1xyXG4gIGNvbnN0IHBvc3RJbmZvID0gYXdhaXQgUG9zdC5jb21tZW50cy5maW5kKCkgIC8vbWF0Y2hlcyBuYW1lIHVybCBwYXJhbXRlciB3ZSBwYXNzZWQuIE1vbmdvIHJldHVybnMgY2xpZW50IG9iamVjdCB3ZSBjYW4gdXNlIHRvIHNlbmQgcXVlcmllcyB0byB0aGUgZGJcclxuICByZXMuc3RhdHVzKDIwMCkuanNvbihwb3N0SW5mbyk7IC8vaW5zdGVhZCBvZiBzZW5kLCB1c2UganNvbiBzaW5jZSB3ZSBhcmUgd29ya2luZyB3aXRoIGpzb24uXHJcbn0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBtZXNzYWdlOiAnRXJyb3InLCBlcnJvciB9KVxyXG59XHJcbn0pXHJcblxyXG5cclxuLy9HRVQgQUxMIFBPU1RTLCBDT01NRU5UUyBBTkQgVVBWT1RFU1xyXG4vL1NFRSBFVkVSWSBDT01NRU5UICh3b3JraW5nKVxyXG5yb3V0ZXIucm91dGUoJy8nKS5nZXQoKHJlcSwgcmVzKSA9PiB7XHJcbiAgQ29tbWVudC5maW5kKClcclxuICAudGhlbihjb21tZW50cyA9PiByZXMuanNvbihjb21tZW50cykpXHJcbiAgLmNhdGNoKGVyciA9PiByZXMuc3RhdHVzKDQwMCkuanNvbignRXJyb3IgJyArIGVycikpXHJcbn0pXHJcblxyXG5cclxucm91dGVyLnJvdXRlKCcvYnJld2VyeS1tZWV0dXAvdGVzdCcpLmdldCgocmVxLCByZXMpID0+IHtcclxuICBDb21tZW50LmZpbmQoKVxyXG4gIC50aGVuKGNvbW1lbnRzID0+IHJlcy5qc29uKGNvbW1lbnRzKSlcclxuICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNDAwKS5qc29uKCdFcnJvciAnICsgZXJyKSlcclxufSlcclxuXHJcblxyXG5cclxuXHJcbi8vVVBEQVRFIEEgUE9TVCBXSVRIIEEgQ09NTUVOVFxyXG5yb3V0ZXIucm91dGUoJy86aWQvYWRkLWNvbW1lbnQnKS5wb3N0KGFzeW5jIChyZXEsIHJlcykgPT4ge1xyXG5jb25zdCB7dXNlcm5hbWUsIHZvdGVzLCBjb21tZW50IH0gPSByZXEuYm9keTtcclxudHJ5IHtcclxuY29uc3QgcG9zdElkID0gcmVxLnBhcmFtcy5pZDsgLy9zZXQgdGhlIHJlcSBpZCB0byBhIHZhcmlhYmxlXHJcbiAgY29uc3Qgc2F2ZUNvbW1lbnRUb1Bvc3QgPSBhd2FpdCBQb3N0LmZpbmRCeUlkKHtfaWQ6IHBvc3RJZH0pLy8ucG9wdWxhdGUoVXNlcikvLyAgLy8ucG9wdWxhdGUoVXNlcikgbGF0ZXJcclxuICAgIGNvbnN0IHBvc3QgPSBhd2FpdCBQb3N0LnVwZGF0ZU9uZSh7IF9pZCA6IHBvc3RJZCB9LCB7IC8vdXBkYXRlIHRoZSBpZCB0aGF0IG1hdGNoZXMgcmVxLnBhcmFtcy5pZCAoZXg6IGJyZXdlcnktbWVldHVwIGlkKVxyXG4gICAgJyRzZXQnOiB7XHJcbiAgICAgIGNvbW1lbnRzOiBzYXZlQ29tbWVudFRvUG9zdC5jb21tZW50cy5jb25jYXQoeyB1c2VybmFtZSwgdm90ZXMsIGNvbW1lbnQgfSlcclxuICAgIH0sXHJcbiAgfSlcclxuICByZXMuc2VuZChwb3N0KVxyXG59Y2F0Y2goZXJyKXtcclxuICByZXMuc3RhdHVzKDQwMCkuc2VuZChlcnIpO1xyXG59XHJcbn0pXHJcblxyXG5cclxuXHJcbnJvdXRlci5yb3V0ZSgnLzpuYW1lL3Vwdm90ZXMnKS5wb3N0KChyZXEsIHJlcykgPT4ge1xyXG4gIGNvbnN0IHBvc3ROYW1lID0gcmVxLnBhcmFtcy5uYW1lOyAvL3Bvc3ROYW1lIGdldHMgbmFtZSBmcm9tIHVybCBwYXJhbXRlcnNcclxuICBDb21tZW50LmZpbmRPbmUoe25hbWU6IHBvc3ROYW1lfSkgLy9jaGFuZ2UgdG8gUG9zdFxyXG4gIC50aGVuKGNvbW1lbnRzID0+IHJlcy5qc29uKGNvbW1lbnRzKSlcclxuICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNDAwKS5qc29uKCdFcnJvciAnICsgZXJyKSlcclxufSlcclxuXHJcblxyXG5cclxuLy9VUFZPVEUgRU5EUE9JTlRcclxucm91dGVyLnJvdXRlKCcvOm5hbWUvdXB2b3RlcycpLnBvc3QoKHJlcSwgcmVzKSA9PiB7XHJcbiAgY29uc3QgcG9zdE5hbWUgPSByZXEucGFyYW1zLm5hbWU7XHJcbn0pXHJcblxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "comments.js"
      ],
      "names": [
        "router",
        "require",
        "Router",
        "Comment",
        "Post",
        "route",
        "get",
        "req",
        "res",
        "postName",
        "params",
        "name",
        "postInfo",
        "comments",
        "find",
        "status",
        "json",
        "error",
        "message",
        "then",
        "catch",
        "err",
        "post",
        "username",
        "votes",
        "comment",
        "body",
        "postId",
        "id",
        "saveCommentToPost",
        "findById",
        "_id",
        "updateOne",
        "concat",
        "send",
        "findOne",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\",
      "sourcesContent": [
        "const router = require('express').Router();\r\nlet Comment = require('../models/comment.model');\r\nlet Post = require('../models/post.model');\r\n\r\n//GET COMMENTS\r\nrouter.route('/brewery-meetup').get(async (req, res) => {\r\n  try {\r\n//Comment.findOne({name: postName})\r\n\r\n  const postName = req.params.name; //postName gets name from url paramters\r\n  const postInfo = await Post.comments.find()  //matches name url paramter we passed. Mongo returns client object we can use to send queries to the db\r\n  res.status(200).json(postInfo); //instead of send, use json since we are working with json.\r\n} catch (error) {\r\n  res.status(500).json({ message: 'Error', error })\r\n}\r\n})\r\n\r\n\r\n//GET ALL POSTS, COMMENTS AND UPVOTES\r\n//SEE EVERY COMMENT (working)\r\nrouter.route('/').get((req, res) => {\r\n  Comment.find()\r\n  .then(comments => res.json(comments))\r\n  .catch(err => res.status(400).json('Error ' + err))\r\n})\r\n\r\n\r\nrouter.route('/brewery-meetup/test').get((req, res) => {\r\n  Comment.find()\r\n  .then(comments => res.json(comments))\r\n  .catch(err => res.status(400).json('Error ' + err))\r\n})\r\n\r\n\r\n\r\n\r\n//UPDATE A POST WITH A COMMENT\r\nrouter.route('/:id/add-comment').post(async (req, res) => {\r\nconst {username, votes, comment } = req.body;\r\ntry {\r\nconst postId = req.params.id; //set the req id to a variable\r\n  const saveCommentToPost = await Post.findById({_id: postId})//.populate(User)//  //.populate(User) later\r\n    const post = await Post.updateOne({ _id : postId }, { //update the id that matches req.params.id (ex: brewery-meetup id)\r\n    '$set': {\r\n      comments: saveCommentToPost.comments.concat({ username, votes, comment })\r\n    },\r\n  })\r\n  res.send(post)\r\n}catch(err){\r\n  res.status(400).send(err);\r\n}\r\n})\r\n\r\n\r\n\r\nrouter.route('/:name/upvotes').post((req, res) => {\r\n  const postName = req.params.name; //postName gets name from url paramters\r\n  Comment.findOne({name: postName}) //change to Post\r\n  .then(comments => res.json(comments))\r\n  .catch(err => res.status(400).json('Error ' + err))\r\n})\r\n\r\n\r\n\r\n//UPVOTE ENDPOINT\r\nrouter.route('/:name/upvotes').post((req, res) => {\r\n  const postName = req.params.name;\r\n})\r\n\r\n\r\nmodule.exports = router;\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1605760497713
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\",\"filename\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\\\\routes\\\\breweries.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\cchewning\\Documents\\react-four\\backend",
      "filename": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\breweries.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\cchewning\\Documents\\react-four\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\breweries.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\breweries.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\",
        "sourceFileName": "breweries.js"
      }
    },
    "ast": null,
    "code": "const router = require('express').Router();\n\nlet Breweries = require('../models/brewery.model');\n\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJyZXdlcmllcy5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJyZXF1aXJlIiwiUm91dGVyIiwiQnJld2VyaWVzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsTUFBTSxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUFQLENBQW1CQyxNQUFuQixFQUFmOztBQUNBLElBQUlDLFNBQVMsR0FBR0YsT0FBTyxDQUFDLHlCQUFELENBQXZCOztBQUlBRyxNQUFNLENBQUNDLE9BQVAsR0FBaUJMLE1BQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcY2NoZXduaW5nXFxEb2N1bWVudHNcXHJlYWN0LWZvdXJcXGJhY2tlbmRcXHJvdXRlc1xcIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgcm91dGVyID0gcmVxdWlyZSgnZXhwcmVzcycpLlJvdXRlcigpO1xyXG5sZXQgQnJld2VyaWVzID0gcmVxdWlyZSgnLi4vbW9kZWxzL2JyZXdlcnkubW9kZWwnKTtcclxuXHJcblxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "breweries.js"
      ],
      "names": [
        "router",
        "require",
        "Router",
        "Breweries",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAP,CAAmBC,MAAnB,EAAf;;AACA,IAAIC,SAAS,GAAGF,OAAO,CAAC,yBAAD,CAAvB;;AAIAG,MAAM,CAACC,OAAP,GAAiBL,MAAjB",
      "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\",
      "sourcesContent": [
        "const router = require('express').Router();\r\nlet Breweries = require('../models/brewery.model');\r\n\r\n\r\n\r\nmodule.exports = router;\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1603915281370
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\",\"filename\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\\\\models\\\\user.model.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\cchewning\\Documents\\react-four\\backend",
      "filename": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\user.model.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\cchewning\\Documents\\react-four\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\user.model.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\user.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\",
        "sourceFileName": "user.model.js"
      }
    },
    "ast": null,
    "code": "const mongoose = require('mongoose');\n\nvar uniqueValidator = require('mongoose-unique-validator');\n\nconst Schema = mongoose.Schema;\nconst userSchema = new Schema({\n  username: {\n    type: String,\n    required: true,\n    unique: true,\n    trim: true,\n    minlength: 3,\n    maxlength: 15\n  },\n  email: {\n    type: String,\n    unique: true,\n    //duplicate key error collection is happening even when this is commented out.\n    required: true,\n    trim: true\n  },\n  password: {\n    type: String,\n    required: true\n  },\n  passwordConfirm: {\n    type: String,\n    required: true\n  },\n  register_date: {\n    type: Date,\n    default: Date.now\n  }\n}); //Custom error msg for 11000\n\nuserSchema.plugin(uniqueValidator, {\n  message: 'Error, expected {PATH} to be unique.'\n});\nconst User = mongoose.model('User', userSchema); //arg 1 could be anything\n\nmodule.exports = User;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIubW9kZWwuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwidW5pcXVlVmFsaWRhdG9yIiwiU2NoZW1hIiwidXNlclNjaGVtYSIsInVzZXJuYW1lIiwidHlwZSIsIlN0cmluZyIsInJlcXVpcmVkIiwidW5pcXVlIiwidHJpbSIsIm1pbmxlbmd0aCIsIm1heGxlbmd0aCIsImVtYWlsIiwicGFzc3dvcmQiLCJwYXNzd29yZENvbmZpcm0iLCJyZWdpc3Rlcl9kYXRlIiwiRGF0ZSIsImRlZmF1bHQiLCJub3ciLCJwbHVnaW4iLCJtZXNzYWdlIiwiVXNlciIsIm1vZGVsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUF4Qjs7QUFDQSxJQUFJQyxlQUFlLEdBQUdELE9BQU8sQ0FBQywyQkFBRCxDQUE3Qjs7QUFDQSxNQUFNRSxNQUFNLEdBQUdILFFBQVEsQ0FBQ0csTUFBeEI7QUFHQSxNQUFNQyxVQUFVLEdBQUcsSUFBSUQsTUFBSixDQUFXO0FBQzVCRSxFQUFBQSxRQUFRLEVBQUU7QUFDUkMsSUFBQUEsSUFBSSxFQUFFQyxNQURFO0FBRVJDLElBQUFBLFFBQVEsRUFBRSxJQUZGO0FBR1JDLElBQUFBLE1BQU0sRUFBRSxJQUhBO0FBSVJDLElBQUFBLElBQUksRUFBRSxJQUpFO0FBS1JDLElBQUFBLFNBQVMsRUFBRSxDQUxIO0FBTVJDLElBQUFBLFNBQVMsRUFBRTtBQU5ILEdBRGtCO0FBUzVCQyxFQUFBQSxLQUFLLEVBQUU7QUFDSFAsSUFBQUEsSUFBSSxFQUFFQyxNQURIO0FBRUhFLElBQUFBLE1BQU0sRUFBRSxJQUZMO0FBRVk7QUFDZkQsSUFBQUEsUUFBUSxFQUFFLElBSFA7QUFJSEUsSUFBQUEsSUFBSSxFQUFFO0FBSkgsR0FUcUI7QUFlNUJJLEVBQUFBLFFBQVEsRUFBRTtBQUNSUixJQUFBQSxJQUFJLEVBQUVDLE1BREU7QUFFUkMsSUFBQUEsUUFBUSxFQUFFO0FBRkYsR0Fma0I7QUFtQjVCTyxFQUFBQSxlQUFlLEVBQUU7QUFDZlQsSUFBQUEsSUFBSSxFQUFFQyxNQURTO0FBRWZDLElBQUFBLFFBQVEsRUFBRTtBQUZLLEdBbkJXO0FBdUI1QlEsRUFBQUEsYUFBYSxFQUFFO0FBQ2JWLElBQUFBLElBQUksRUFBRVcsSUFETztBQUViQyxJQUFBQSxPQUFPLEVBQUVELElBQUksQ0FBQ0U7QUFGRDtBQXZCYSxDQUFYLENBQW5CLEMsQ0E2QkE7O0FBQ0FmLFVBQVUsQ0FBQ2dCLE1BQVgsQ0FBa0JsQixlQUFsQixFQUFtQztBQUFFbUIsRUFBQUEsT0FBTyxFQUFFO0FBQVgsQ0FBbkM7QUFJQSxNQUFNQyxJQUFJLEdBQUd0QixRQUFRLENBQUN1QixLQUFULENBQWUsTUFBZixFQUF1Qm5CLFVBQXZCLENBQWIsQyxDQUFpRDs7QUFFakRvQixNQUFNLENBQUNDLE9BQVAsR0FBaUJILElBQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcY2NoZXduaW5nXFxEb2N1bWVudHNcXHJlYWN0LWZvdXJcXGJhY2tlbmRcXG1vZGVsc1xcIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpO1xyXG52YXIgdW5pcXVlVmFsaWRhdG9yID0gcmVxdWlyZSgnbW9uZ29vc2UtdW5pcXVlLXZhbGlkYXRvcicpO1xyXG5jb25zdCBTY2hlbWEgPSBtb25nb29zZS5TY2hlbWE7XHJcblxyXG5cclxuY29uc3QgdXNlclNjaGVtYSA9IG5ldyBTY2hlbWEoe1xyXG4gIHVzZXJuYW1lOiB7XHJcbiAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICByZXF1aXJlZDogdHJ1ZSxcclxuICAgIHVuaXF1ZTogdHJ1ZSxcclxuICAgIHRyaW06IHRydWUsXHJcbiAgICBtaW5sZW5ndGg6IDMsXHJcbiAgICBtYXhsZW5ndGg6IDE1XHJcbiAgfSxcclxuICBlbWFpbDoge1xyXG4gICAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICAgIHVuaXF1ZTogdHJ1ZSwgIC8vZHVwbGljYXRlIGtleSBlcnJvciBjb2xsZWN0aW9uIGlzIGhhcHBlbmluZyBldmVuIHdoZW4gdGhpcyBpcyBjb21tZW50ZWQgb3V0LlxyXG4gICAgICByZXF1aXJlZDogdHJ1ZSxcclxuICAgICAgdHJpbTogdHJ1ZVxyXG4gICAgfSxcclxuICBwYXNzd29yZDoge1xyXG4gICAgdHlwZTogU3RyaW5nLFxyXG4gICAgcmVxdWlyZWQ6IHRydWVcclxuICB9LFxyXG4gIHBhc3N3b3JkQ29uZmlybToge1xyXG4gICAgdHlwZTogU3RyaW5nLFxyXG4gICAgcmVxdWlyZWQ6IHRydWVcclxuICB9LFxyXG4gIHJlZ2lzdGVyX2RhdGU6IHtcclxuICAgIHR5cGU6IERhdGUsXHJcbiAgICBkZWZhdWx0OiBEYXRlLm5vd1xyXG4gIH1cclxufSk7XHJcblxyXG4vL0N1c3RvbSBlcnJvciBtc2cgZm9yIDExMDAwXHJcbnVzZXJTY2hlbWEucGx1Z2luKHVuaXF1ZVZhbGlkYXRvciwgeyBtZXNzYWdlOiAnRXJyb3IsIGV4cGVjdGVkIHtQQVRIfSB0byBiZSB1bmlxdWUuJyB9KTtcclxuXHJcblxyXG5cclxuY29uc3QgVXNlciA9IG1vbmdvb3NlLm1vZGVsKCdVc2VyJywgdXNlclNjaGVtYSk7IC8vYXJnIDEgY291bGQgYmUgYW55dGhpbmdcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gVXNlcjtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "user.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "uniqueValidator",
        "Schema",
        "userSchema",
        "username",
        "type",
        "String",
        "required",
        "unique",
        "trim",
        "minlength",
        "maxlength",
        "email",
        "password",
        "passwordConfirm",
        "register_date",
        "Date",
        "default",
        "now",
        "plugin",
        "message",
        "User",
        "model",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAIC,eAAe,GAAGD,OAAO,CAAC,2BAAD,CAA7B;;AACA,MAAME,MAAM,GAAGH,QAAQ,CAACG,MAAxB;AAGA,MAAMC,UAAU,GAAG,IAAID,MAAJ,CAAW;AAC5BE,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAEC,MADE;AAERC,IAAAA,QAAQ,EAAE,IAFF;AAGRC,IAAAA,MAAM,EAAE,IAHA;AAIRC,IAAAA,IAAI,EAAE,IAJE;AAKRC,IAAAA,SAAS,EAAE,CALH;AAMRC,IAAAA,SAAS,EAAE;AANH,GADkB;AAS5BC,EAAAA,KAAK,EAAE;AACHP,IAAAA,IAAI,EAAEC,MADH;AAEHE,IAAAA,MAAM,EAAE,IAFL;AAEY;AACfD,IAAAA,QAAQ,EAAE,IAHP;AAIHE,IAAAA,IAAI,EAAE;AAJH,GATqB;AAe5BI,EAAAA,QAAQ,EAAE;AACRR,IAAAA,IAAI,EAAEC,MADE;AAERC,IAAAA,QAAQ,EAAE;AAFF,GAfkB;AAmB5BO,EAAAA,eAAe,EAAE;AACfT,IAAAA,IAAI,EAAEC,MADS;AAEfC,IAAAA,QAAQ,EAAE;AAFK,GAnBW;AAuB5BQ,EAAAA,aAAa,EAAE;AACbV,IAAAA,IAAI,EAAEW,IADO;AAEbC,IAAAA,OAAO,EAAED,IAAI,CAACE;AAFD;AAvBa,CAAX,CAAnB,C,CA6BA;;AACAf,UAAU,CAACgB,MAAX,CAAkBlB,eAAlB,EAAmC;AAAEmB,EAAAA,OAAO,EAAE;AAAX,CAAnC;AAIA,MAAMC,IAAI,GAAGtB,QAAQ,CAACuB,KAAT,CAAe,MAAf,EAAuBnB,UAAvB,CAAb,C,CAAiD;;AAEjDoB,MAAM,CAACC,OAAP,GAAiBH,IAAjB",
      "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\",
      "sourcesContent": [
        "const mongoose = require('mongoose');\r\nvar uniqueValidator = require('mongoose-unique-validator');\r\nconst Schema = mongoose.Schema;\r\n\r\n\r\nconst userSchema = new Schema({\r\n  username: {\r\n    type: String,\r\n    required: true,\r\n    unique: true,\r\n    trim: true,\r\n    minlength: 3,\r\n    maxlength: 15\r\n  },\r\n  email: {\r\n      type: String,\r\n      unique: true,  //duplicate key error collection is happening even when this is commented out.\r\n      required: true,\r\n      trim: true\r\n    },\r\n  password: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  passwordConfirm: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  register_date: {\r\n    type: Date,\r\n    default: Date.now\r\n  }\r\n});\r\n\r\n//Custom error msg for 11000\r\nuserSchema.plugin(uniqueValidator, { message: 'Error, expected {PATH} to be unique.' });\r\n\r\n\r\n\r\nconst User = mongoose.model('User', userSchema); //arg 1 could be anything\r\n\r\nmodule.exports = User;\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1606149922859
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\",\"filename\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\\\\models\\\\comment.model.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\cchewning\\Documents\\react-four\\backend",
      "filename": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\comment.model.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\cchewning\\Documents\\react-four\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\comment.model.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\comment.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\",
        "sourceFileName": "comment.model.js"
      }
    },
    "ast": null,
    "code": "const mongoose = require(\"mongoose\");\n\nconst Schema = mongoose.Schema;\nconst commentSchema = new Schema({\n  username: {\n    type: String,\n    required: true\n  },\n  votes: {\n    type: String //may not need this unless you want to have upvotes and downvotes for comments.\n\n  },\n  comments: {\n    //replies on this comment will go here. you'll need to push into this.\n    type: String,\n    required: true\n  }\n});\nconst Comment = mongoose.model(\"Comment\", commentSchema);\nmodule.exports = Comment;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbW1lbnQubW9kZWwuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwiU2NoZW1hIiwiY29tbWVudFNjaGVtYSIsInVzZXJuYW1lIiwidHlwZSIsIlN0cmluZyIsInJlcXVpcmVkIiwidm90ZXMiLCJjb21tZW50cyIsIkNvbW1lbnQiLCJtb2RlbCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFFBQVEsR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBeEI7O0FBQ0EsTUFBTUMsTUFBTSxHQUFHRixRQUFRLENBQUNFLE1BQXhCO0FBRUEsTUFBTUMsYUFBYSxHQUFHLElBQUlELE1BQUosQ0FBVztBQUMvQkUsRUFBQUEsUUFBUSxFQUFFO0FBQ1JDLElBQUFBLElBQUksRUFBRUMsTUFERTtBQUVSQyxJQUFBQSxRQUFRLEVBQUU7QUFGRixHQURxQjtBQUsvQkMsRUFBQUEsS0FBSyxFQUFFO0FBQ0xILElBQUFBLElBQUksRUFBRUMsTUFERCxDQUNTOztBQURULEdBTHdCO0FBUS9CRyxFQUFBQSxRQUFRLEVBQUU7QUFBRztBQUNYSixJQUFBQSxJQUFJLEVBQUVDLE1BREU7QUFFUkMsSUFBQUEsUUFBUSxFQUFFO0FBRkY7QUFScUIsQ0FBWCxDQUF0QjtBQWNBLE1BQU1HLE9BQU8sR0FBR1YsUUFBUSxDQUFDVyxLQUFULENBQWUsU0FBZixFQUEwQlIsYUFBMUIsQ0FBaEI7QUFFQVMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCSCxPQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGNjaGV3bmluZ1xcRG9jdW1lbnRzXFxyZWFjdC1mb3VyXFxiYWNrZW5kXFxtb2RlbHNcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZShcIm1vbmdvb3NlXCIpO1xyXG5jb25zdCBTY2hlbWEgPSBtb25nb29zZS5TY2hlbWE7XHJcblxyXG5jb25zdCBjb21tZW50U2NoZW1hID0gbmV3IFNjaGVtYSh7XHJcbiAgdXNlcm5hbWU6IHtcclxuICAgIHR5cGU6IFN0cmluZyxcclxuICAgIHJlcXVpcmVkOiB0cnVlLFxyXG4gIH0sXHJcbiAgdm90ZXM6IHtcclxuICAgIHR5cGU6IFN0cmluZywgLy9tYXkgbm90IG5lZWQgdGhpcyB1bmxlc3MgeW91IHdhbnQgdG8gaGF2ZSB1cHZvdGVzIGFuZCBkb3dudm90ZXMgZm9yIGNvbW1lbnRzLlxyXG4gIH0sXHJcbiAgY29tbWVudHM6IHsgIC8vcmVwbGllcyBvbiB0aGlzIGNvbW1lbnQgd2lsbCBnbyBoZXJlLiB5b3UnbGwgbmVlZCB0byBwdXNoIGludG8gdGhpcy5cclxuICAgIHR5cGU6IFN0cmluZyxcclxuICAgIHJlcXVpcmVkOiB0cnVlLFxyXG4gIH1cclxufSk7XHJcblxyXG5jb25zdCBDb21tZW50ID0gbW9uZ29vc2UubW9kZWwoXCJDb21tZW50XCIsIGNvbW1lbnRTY2hlbWEpO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBDb21tZW50O1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "comment.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "commentSchema",
        "username",
        "type",
        "String",
        "required",
        "votes",
        "comments",
        "Comment",
        "model",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAEA,MAAMC,aAAa,GAAG,IAAID,MAAJ,CAAW;AAC/BE,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAEC,MADE;AAERC,IAAAA,QAAQ,EAAE;AAFF,GADqB;AAK/BC,EAAAA,KAAK,EAAE;AACLH,IAAAA,IAAI,EAAEC,MADD,CACS;;AADT,GALwB;AAQ/BG,EAAAA,QAAQ,EAAE;AAAG;AACXJ,IAAAA,IAAI,EAAEC,MADE;AAERC,IAAAA,QAAQ,EAAE;AAFF;AARqB,CAAX,CAAtB;AAcA,MAAMG,OAAO,GAAGV,QAAQ,CAACW,KAAT,CAAe,SAAf,EAA0BR,aAA1B,CAAhB;AAEAS,MAAM,CAACC,OAAP,GAAiBH,OAAjB",
      "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\",
      "sourcesContent": [
        "const mongoose = require(\"mongoose\");\r\nconst Schema = mongoose.Schema;\r\n\r\nconst commentSchema = new Schema({\r\n  username: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  votes: {\r\n    type: String, //may not need this unless you want to have upvotes and downvotes for comments.\r\n  },\r\n  comments: {  //replies on this comment will go here. you'll need to push into this.\r\n    type: String,\r\n    required: true,\r\n  }\r\n});\r\n\r\nconst Comment = mongoose.model(\"Comment\", commentSchema);\r\n\r\nmodule.exports = Comment;\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1605240613380
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\",\"filename\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\\\\models\\\\brewery.model.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\cchewning\\Documents\\react-four\\backend",
      "filename": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\brewery.model.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\cchewning\\Documents\\react-four\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\brewery.model.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\brewery.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\",
        "sourceFileName": "brewery.model.js"
      }
    },
    "ast": null,
    "code": "const mongoose = require('mongoose');\n\nconst Schema = mongoose.Schema;\nconst brewerySchema = new Schema({\n  name: {\n    type: String\n  },\n  beers: {\n    type: String\n  },\n  image: {\n    data: Buffer,\n    type: String\n  },\n  location: {\n    type: String\n  },\n  website: {\n    type: String\n  },\n  hours: {\n    type: String\n  },\n  content: {\n    type: String\n  }\n});\nconst Brewery = mongoose.model('Brewery', brewerySchema); //arg 1 could be anything\n\nmodule.exports = Brewery;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJyZXdlcnkubW9kZWwuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwiU2NoZW1hIiwiYnJld2VyeVNjaGVtYSIsIm5hbWUiLCJ0eXBlIiwiU3RyaW5nIiwiYmVlcnMiLCJpbWFnZSIsImRhdGEiLCJCdWZmZXIiLCJsb2NhdGlvbiIsIndlYnNpdGUiLCJob3VycyIsImNvbnRlbnQiLCJCcmV3ZXJ5IiwibW9kZWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXhCOztBQUNBLE1BQU1DLE1BQU0sR0FBR0YsUUFBUSxDQUFDRSxNQUF4QjtBQUVBLE1BQU1DLGFBQWEsR0FBRyxJQUFJRCxNQUFKLENBQVc7QUFDL0JFLEVBQUFBLElBQUksRUFBRTtBQUFFQyxJQUFBQSxJQUFJLEVBQUVDO0FBQVIsR0FEeUI7QUFFL0JDLEVBQUFBLEtBQUssRUFBRTtBQUFFRixJQUFBQSxJQUFJLEVBQUVDO0FBQVIsR0FGd0I7QUFHL0JFLEVBQUFBLEtBQUssRUFBRTtBQUFFQyxJQUFBQSxJQUFJLEVBQUVDLE1BQVI7QUFBZ0JMLElBQUFBLElBQUksRUFBRUM7QUFBdEIsR0FId0I7QUFJL0JLLEVBQUFBLFFBQVEsRUFBRTtBQUFDTixJQUFBQSxJQUFJLEVBQUVDO0FBQVAsR0FKcUI7QUFLL0JNLEVBQUFBLE9BQU8sRUFBRTtBQUFDUCxJQUFBQSxJQUFJLEVBQUVDO0FBQVAsR0FMc0I7QUFNL0JPLEVBQUFBLEtBQUssRUFBRTtBQUFDUixJQUFBQSxJQUFJLEVBQUVDO0FBQVAsR0FOd0I7QUFPL0JRLEVBQUFBLE9BQU8sRUFBRTtBQUFDVCxJQUFBQSxJQUFJLEVBQUVDO0FBQVA7QUFQc0IsQ0FBWCxDQUF0QjtBQVVBLE1BQU1TLE9BQU8sR0FBR2YsUUFBUSxDQUFDZ0IsS0FBVCxDQUFlLFNBQWYsRUFBMEJiLGFBQTFCLENBQWhCLEMsQ0FBMEQ7O0FBRTFEYyxNQUFNLENBQUNDLE9BQVAsR0FBaUJILE9BQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcY2NoZXduaW5nXFxEb2N1bWVudHNcXHJlYWN0LWZvdXJcXGJhY2tlbmRcXG1vZGVsc1xcIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpO1xyXG5jb25zdCBTY2hlbWEgPSBtb25nb29zZS5TY2hlbWE7XHJcblxyXG5jb25zdCBicmV3ZXJ5U2NoZW1hID0gbmV3IFNjaGVtYSh7XHJcbiAgbmFtZTogeyB0eXBlOiBTdHJpbmcgfSxcclxuICBiZWVyczogeyB0eXBlOiBTdHJpbmcgfSxcclxuICBpbWFnZTogeyBkYXRhOiBCdWZmZXIsIHR5cGU6IFN0cmluZyB9LFxyXG4gIGxvY2F0aW9uOiB7dHlwZTogU3RyaW5nfSxcclxuICB3ZWJzaXRlOiB7dHlwZTogU3RyaW5nfSxcclxuICBob3Vyczoge3R5cGU6IFN0cmluZ30sXHJcbiAgY29udGVudDoge3R5cGU6IFN0cmluZ30sXHJcbn0pXHJcblxyXG5jb25zdCBCcmV3ZXJ5ID0gbW9uZ29vc2UubW9kZWwoJ0JyZXdlcnknLCBicmV3ZXJ5U2NoZW1hKTsgLy9hcmcgMSBjb3VsZCBiZSBhbnl0aGluZ1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBCcmV3ZXJ5O1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "brewery.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "brewerySchema",
        "name",
        "type",
        "String",
        "beers",
        "image",
        "data",
        "Buffer",
        "location",
        "website",
        "hours",
        "content",
        "Brewery",
        "model",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAEA,MAAMC,aAAa,GAAG,IAAID,MAAJ,CAAW;AAC/BE,EAAAA,IAAI,EAAE;AAAEC,IAAAA,IAAI,EAAEC;AAAR,GADyB;AAE/BC,EAAAA,KAAK,EAAE;AAAEF,IAAAA,IAAI,EAAEC;AAAR,GAFwB;AAG/BE,EAAAA,KAAK,EAAE;AAAEC,IAAAA,IAAI,EAAEC,MAAR;AAAgBL,IAAAA,IAAI,EAAEC;AAAtB,GAHwB;AAI/BK,EAAAA,QAAQ,EAAE;AAACN,IAAAA,IAAI,EAAEC;AAAP,GAJqB;AAK/BM,EAAAA,OAAO,EAAE;AAACP,IAAAA,IAAI,EAAEC;AAAP,GALsB;AAM/BO,EAAAA,KAAK,EAAE;AAACR,IAAAA,IAAI,EAAEC;AAAP,GANwB;AAO/BQ,EAAAA,OAAO,EAAE;AAACT,IAAAA,IAAI,EAAEC;AAAP;AAPsB,CAAX,CAAtB;AAUA,MAAMS,OAAO,GAAGf,QAAQ,CAACgB,KAAT,CAAe,SAAf,EAA0Bb,aAA1B,CAAhB,C,CAA0D;;AAE1Dc,MAAM,CAACC,OAAP,GAAiBH,OAAjB",
      "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\",
      "sourcesContent": [
        "const mongoose = require('mongoose');\r\nconst Schema = mongoose.Schema;\r\n\r\nconst brewerySchema = new Schema({\r\n  name: { type: String },\r\n  beers: { type: String },\r\n  image: { data: Buffer, type: String },\r\n  location: {type: String},\r\n  website: {type: String},\r\n  hours: {type: String},\r\n  content: {type: String},\r\n})\r\n\r\nconst Brewery = mongoose.model('Brewery', brewerySchema); //arg 1 could be anything\r\n\r\nmodule.exports = Brewery;\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1603915204629
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\",\"filename\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\\\\routes\\\\posts.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\cchewning\\Documents\\react-four\\backend",
      "filename": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\posts.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\cchewning\\Documents\\react-four\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\posts.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\posts.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\",
        "sourceFileName": "posts.js"
      }
    },
    "ast": null,
    "code": "const router = require('express').Router();\n\nlet Post = require('../models/post.model'); ///api/community/posts\n//GET ALL POSTS\n\n\nrouter.route('').get((req, res) => {\n  Post.find().then(posts => res.json(posts)).catch(err => res.status(400).json('Error ' + err));\n}); //GET COMMENTS PER POST\n\nrouter.route('posts/:id').get((req, res) => {\n  Post.findById(req.params.id).then(posts => res.json(posts)).catch(err => res.status(400).json('Error ' + err));\n}); //ADD POST\n\nrouter.route('/add-post').post((req, res) => {\n  //Set variables\n  const username = req.body.username;\n  const name = req.body.name; //how to get logged in username?  //destructure to const { name, comment } = req.body;  ?\n\n  const content = req.body.content;\n  const votes = 0;\n  const newPost = new Post({\n    username,\n    name,\n    content,\n    votes\n  });\n  newPost.save().then(() => res.json('Post added')).catch(err => res.status(400).json('Error' + err));\n}); //UPDATE POST\n\nrouter.route('/update/:id').post((req, res) => {\n  Post.findById(req.params.id).then(post => {\n    post.votes = req.body.votes;\n    post.username = req.body.username;\n    post.content = req.body.content;\n    post.save().then(() => res.json('Post updated')).catch(err => res.status(400).json('Error: ' + err));\n  }).catch(err => res.status(400).json('Error: ' + err));\n}); //DELETE POST\n\nrouter.route('/:id').delete((req, res) => {\n  Post.findByIdAndDelete(req.params.id).then(() => res.json('Post deleted.')).catch(err => res.status(400).json('Error: ' + err));\n}); //UPVOTE POST\n\nrouter.route('/:id/upvote').post(async (req, res) => {\n  const postId = req.params.id;\n  const postInfo = await Post.findOne({\n    _id: postId\n  });\n  await Post.updateOne({\n    _id: postId\n  }, {\n    '$set': {\n      votes: postInfo.votes + 1\n    }\n  });\n  const updatedPostInfo = await Post.findOne({\n    _id: postId\n  });\n  res.status(200).json(updatedPostInfo.votes);\n}); //DOWNVOTE POST\n\nrouter.route('/:id/downvote').post(async (req, res) => {\n  const postId = req.params.id;\n  const postInfo = await Post.findOne({\n    _id: postId\n  });\n  await Post.updateOne({\n    _id: postId\n  }, {\n    '$set': {\n      votes: postInfo.votes - 1\n    }\n  });\n  const updatedPostInfo = await Post.findOne({\n    _id: postId\n  });\n  res.status(200).json(updatedPostInfo.votes);\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "posts.js"
      ],
      "names": [
        "router",
        "require",
        "Router",
        "Post",
        "route",
        "get",
        "req",
        "res",
        "find",
        "then",
        "posts",
        "json",
        "catch",
        "err",
        "status",
        "findById",
        "params",
        "id",
        "post",
        "username",
        "body",
        "name",
        "content",
        "votes",
        "newPost",
        "save",
        "delete",
        "findByIdAndDelete",
        "postId",
        "postInfo",
        "findOne",
        "_id",
        "updateOne",
        "updatedPostInfo",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\",
      "sourcesContent": [
        "const router = require('express').Router();\r\nlet Post = require('../models/post.model');\r\n\r\n///api/community/posts\r\n\r\n\r\n//GET ALL POSTS\r\nrouter.route('').get((req, res) => {\r\n  Post.find()\r\n  .then(posts => res.json(posts))\r\n  .catch(err => res.status(400).json('Error ' + err))\r\n})\r\n\r\n//GET COMMENTS PER POST\r\nrouter.route('posts/:id').get((req, res) => {\r\n  Post.findById(req.params.id)\r\n  .then(posts => res.json(posts))\r\n  .catch(err => res.status(400).json('Error ' + err))\r\n})\r\n\r\n//ADD POST\r\nrouter.route('/add-post').post((req, res) => {\r\n  //Set variables\r\n  const username = req.body.username;\r\n  const name = req.body.name; //how to get logged in username?  //destructure to const { name, comment } = req.body;  ?\r\n  const content = req.body.content;\r\n  const votes = 0;\r\n\r\n  const newPost = new Post({\r\n    username,\r\n    name,\r\n    content,\r\n    votes\r\n  });\r\n\r\n  newPost.save()\r\n  .then(() => res.json('Post added'))\r\n  .catch(err => res.status(400).json('Error' + err));\r\n});\r\n\r\n//UPDATE POST\r\nrouter.route('/update/:id').post((req, res) => {\r\n  Post.findById(req.params.id)\r\n  .then(post => {\r\n    post.votes = req.body.votes;\r\n    post.username = req.body.username;\r\n    post.content = req.body.content;\r\n\r\n    post.save()\r\n    .then(() => res.json('Post updated'))\r\n    .catch(err => res.status(400).json('Error: ' + err))\r\n  })\r\n  .catch(err => res.status(400).json('Error: ' + err))\r\n})\r\n\r\n\r\n//DELETE POST\r\nrouter.route('/:id').delete((req, res) => {\r\n  Post.findByIdAndDelete(req.params.id)\r\n  .then(() => res.json('Post deleted.'))\r\n  .catch(err => res.status(400).json('Error: ' + err))\r\n  })\r\n\r\n//UPVOTE POST\r\nrouter.route('/:id/upvote').post(async (req, res) => {\r\n          const postId = req.params.id;\r\n          const postInfo = await Post.findOne({ _id: postId });\r\n          await Post.updateOne({ _id: postId }, {\r\n              '$set': {\r\n                  votes: postInfo.votes + 1,\r\n              },\r\n          });\r\n          const updatedPostInfo = await Post.findOne({ _id: postId });\r\n          res.status(200).json(updatedPostInfo.votes);\r\n      });\r\n\r\n//DOWNVOTE POST\r\nrouter.route('/:id/downvote').post(async (req, res) => {\r\n              const postId = req.params.id;\r\n              const postInfo = await Post.findOne({ _id: postId });\r\n              await Post.updateOne({ _id: postId }, {\r\n                  '$set': {\r\n                      votes: postInfo.votes - 1,\r\n                  },\r\n              });\r\n              const updatedPostInfo = await Post.findOne({ _id: postId });\r\n\r\n              res.status(200).json(updatedPostInfo.votes);\r\n          });\r\n\r\n\r\n\r\n\r\nmodule.exports = router;\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1605732998874
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\",\"filename\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\\\\models\\\\post.model.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\cchewning\\Documents\\react-four\\backend",
      "filename": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\post.model.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\cchewning\\Documents\\react-four\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\post.model.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\post.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\",
        "sourceFileName": "post.model.js"
      }
    },
    "ast": null,
    "code": "const mongoose = require(\"mongoose\");\n\nconst Schema = mongoose.Schema;\nconst postSchema = new Schema({\n  username: {\n    type: String,\n    required: true\n  },\n  name: {\n    type: String,\n    required: true\n  },\n  content: {\n    type: String,\n    required: true\n  },\n  votes: {\n    type: Number,\n    default: 0\n  },\n  comments: {\n    type: Array\n  }\n}, {\n  timestamps: true\n});\nconst Post = mongoose.model(\"Post\", postSchema); //arg 1 could be anything\n\nmodule.exports = Post;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvc3QubW9kZWwuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwiU2NoZW1hIiwicG9zdFNjaGVtYSIsInVzZXJuYW1lIiwidHlwZSIsIlN0cmluZyIsInJlcXVpcmVkIiwibmFtZSIsImNvbnRlbnQiLCJ2b3RlcyIsIk51bWJlciIsImRlZmF1bHQiLCJjb21tZW50cyIsIkFycmF5IiwidGltZXN0YW1wcyIsIlBvc3QiLCJtb2RlbCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFFBQVEsR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBeEI7O0FBQ0EsTUFBTUMsTUFBTSxHQUFHRixRQUFRLENBQUNFLE1BQXhCO0FBRUEsTUFBTUMsVUFBVSxHQUFHLElBQUlELE1BQUosQ0FBVztBQUM1QkUsRUFBQUEsUUFBUSxFQUFFO0FBQ1JDLElBQUFBLElBQUksRUFBRUMsTUFERTtBQUVSQyxJQUFBQSxRQUFRLEVBQUU7QUFGRixHQURrQjtBQUs1QkMsRUFBQUEsSUFBSSxFQUFFO0FBQ0pILElBQUFBLElBQUksRUFBRUMsTUFERjtBQUVKQyxJQUFBQSxRQUFRLEVBQUU7QUFGTixHQUxzQjtBQVM1QkUsRUFBQUEsT0FBTyxFQUFFO0FBQ1BKLElBQUFBLElBQUksRUFBRUMsTUFEQztBQUVQQyxJQUFBQSxRQUFRLEVBQUU7QUFGSCxHQVRtQjtBQWE1QkcsRUFBQUEsS0FBSyxFQUFFO0FBQ0xMLElBQUFBLElBQUksRUFBRU0sTUFERDtBQUVMQyxJQUFBQSxPQUFPLEVBQUU7QUFGSixHQWJxQjtBQWlCNUJDLEVBQUFBLFFBQVEsRUFBRTtBQUNSUixJQUFBQSxJQUFJLEVBQUVTO0FBREU7QUFqQmtCLENBQVgsRUFxQmpCO0FBQ0VDLEVBQUFBLFVBQVUsRUFBRTtBQURkLENBckJpQixDQUFuQjtBQTBCQSxNQUFNQyxJQUFJLEdBQUdoQixRQUFRLENBQUNpQixLQUFULENBQWUsTUFBZixFQUF1QmQsVUFBdkIsQ0FBYixDLENBQWlEOztBQUVqRGUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCSCxJQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGNjaGV3bmluZ1xcRG9jdW1lbnRzXFxyZWFjdC1mb3VyXFxiYWNrZW5kXFxtb2RlbHNcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZShcIm1vbmdvb3NlXCIpO1xyXG5jb25zdCBTY2hlbWEgPSBtb25nb29zZS5TY2hlbWE7XHJcblxyXG5jb25zdCBwb3N0U2NoZW1hID0gbmV3IFNjaGVtYSh7XHJcbiAgdXNlcm5hbWU6IHtcclxuICAgIHR5cGU6IFN0cmluZyxcclxuICAgIHJlcXVpcmVkOiB0cnVlLFxyXG4gIH0sXHJcbiAgbmFtZToge1xyXG4gICAgdHlwZTogU3RyaW5nLFxyXG4gICAgcmVxdWlyZWQ6IHRydWUsXHJcbiAgfSxcclxuICBjb250ZW50OiB7XHJcbiAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICByZXF1aXJlZDogdHJ1ZSxcclxuICB9LFxyXG4gIHZvdGVzOiB7XHJcbiAgICB0eXBlOiBOdW1iZXIsXHJcbiAgICBkZWZhdWx0OiAwLFxyXG4gIH0sXHJcbiAgY29tbWVudHM6IHtcclxuICAgIHR5cGU6IEFycmF5LFxyXG4gIH1cclxufSxcclxuICB7XHJcbiAgICB0aW1lc3RhbXBzOiB0cnVlLFxyXG4gIH1cclxuKTtcclxuXHJcbmNvbnN0IFBvc3QgPSBtb25nb29zZS5tb2RlbChcIlBvc3RcIiwgcG9zdFNjaGVtYSk7IC8vYXJnIDEgY291bGQgYmUgYW55dGhpbmdcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gUG9zdDtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "post.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "postSchema",
        "username",
        "type",
        "String",
        "required",
        "name",
        "content",
        "votes",
        "Number",
        "default",
        "comments",
        "Array",
        "timestamps",
        "Post",
        "model",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAEA,MAAMC,UAAU,GAAG,IAAID,MAAJ,CAAW;AAC5BE,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAEC,MADE;AAERC,IAAAA,QAAQ,EAAE;AAFF,GADkB;AAK5BC,EAAAA,IAAI,EAAE;AACJH,IAAAA,IAAI,EAAEC,MADF;AAEJC,IAAAA,QAAQ,EAAE;AAFN,GALsB;AAS5BE,EAAAA,OAAO,EAAE;AACPJ,IAAAA,IAAI,EAAEC,MADC;AAEPC,IAAAA,QAAQ,EAAE;AAFH,GATmB;AAa5BG,EAAAA,KAAK,EAAE;AACLL,IAAAA,IAAI,EAAEM,MADD;AAELC,IAAAA,OAAO,EAAE;AAFJ,GAbqB;AAiB5BC,EAAAA,QAAQ,EAAE;AACRR,IAAAA,IAAI,EAAES;AADE;AAjBkB,CAAX,EAqBjB;AACEC,EAAAA,UAAU,EAAE;AADd,CArBiB,CAAnB;AA0BA,MAAMC,IAAI,GAAGhB,QAAQ,CAACiB,KAAT,CAAe,MAAf,EAAuBd,UAAvB,CAAb,C,CAAiD;;AAEjDe,MAAM,CAACC,OAAP,GAAiBH,IAAjB",
      "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\",
      "sourcesContent": [
        "const mongoose = require(\"mongoose\");\r\nconst Schema = mongoose.Schema;\r\n\r\nconst postSchema = new Schema({\r\n  username: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  name: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  content: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  votes: {\r\n    type: Number,\r\n    default: 0,\r\n  },\r\n  comments: {\r\n    type: Array,\r\n  }\r\n},\r\n  {\r\n    timestamps: true,\r\n  }\r\n);\r\n\r\nconst Post = mongoose.model(\"Post\", postSchema); //arg 1 could be anything\r\n\r\nmodule.exports = Post;\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1604982453002
  }
}