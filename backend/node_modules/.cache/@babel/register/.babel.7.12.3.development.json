{
  "{\"sourceRoot\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\",\"filename\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\\\\src\\\\server.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\cchewning\\Documents\\react-four\\backend",
      "filename": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\src\\server.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\cchewning\\Documents\\react-four\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\src\\server.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\src\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\src\\",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n//import bodyParser from 'body-parser'; don't need b.c of the new version of express.\n//import { MongoClient } from 'mongodb'; //can connect to local db\nvar mongoose = require('mongoose'); //helps us connect to mongodb database\n\n\nvar config = require('config');\n\nvar app = (0, _express[\"default\"])();\nvar port = process.env.port || 8000;\n\nvar cors = require('cors');\n\nrequire('dotenv').config(); //env variables can be in the dotenv file.\n\n\nvar session = require('express-session'); //middleware\n\n\napp.use(cors());\napp.use(_express[\"default\"].json());\napp.use(session({\n  secret: \"hello\",\n  resave: false,\n  saveUninitialized: true\n})); //app.use(bodyParser.json());\n\nvar uri = process.env.ATLAS_URI;\nvar jwt = process.env.JWT_SECRET;\nconsole.log(uri); //mongoose.connect(uri, { useNewUrlParser: true; useCreateIndex: true; }); //FLAGS: mongodb nodejs driver parses the connection string. useCreateIndex: mongodb deprecating ensure index fn\n\nmongoose.connect(uri, {\n  useNewUrlParser: true,\n  useCreateIndex: true,\n  useUnifiedTopology: true\n});\nvar client = mongoose.connection;\nclient.once('open', function () {\n  console.log(\"MongoDB is connected.\");\n}); //require the files and use them.\n\nvar usersRouter = require('../routes/users');\n\nvar postsRouter = require('../routes/posts');\n\nvar commentsRouter = require('../routes/comments');\n\nvar breweriesRouter = require('../routes/breweries');\n\nvar authRouter = require('../routes/auth');\n\napp.use('/users', usersRouter); // means /users is the base route\n\napp.use('/api/community', commentsRouter);\napp.use('/api/brewery', breweriesRouter);\napp.use('/api/community/posts', postsRouter);\napp.use('/api/login', authRouter);\napp.listen(port, function () {\n  return console.log('Listening on port 8000');\n}); //argument to specify which port to listen on. then a callback\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJjb25maWciLCJhcHAiLCJwb3J0IiwicHJvY2VzcyIsImVudiIsImNvcnMiLCJzZXNzaW9uIiwidXNlIiwiZXhwcmVzcyIsImpzb24iLCJzZWNyZXQiLCJyZXNhdmUiLCJzYXZlVW5pbml0aWFsaXplZCIsInVyaSIsIkFUTEFTX1VSSSIsImp3dCIsIkpXVF9TRUNSRVQiLCJjb25zb2xlIiwibG9nIiwiY29ubmVjdCIsInVzZU5ld1VybFBhcnNlciIsInVzZUNyZWF0ZUluZGV4IiwidXNlVW5pZmllZFRvcG9sb2d5IiwiY2xpZW50IiwiY29ubmVjdGlvbiIsIm9uY2UiLCJ1c2Vyc1JvdXRlciIsInBvc3RzUm91dGVyIiwiY29tbWVudHNSb3V0ZXIiLCJicmV3ZXJpZXNSb3V0ZXIiLCJhdXRoUm91dGVyIiwibGlzdGVuIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7O0FBQ0E7QUFDQTtBQUNBLElBQU1BLFFBQVEsR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBeEIsQyxDQUFzQzs7O0FBQ3RDLElBQU1DLE1BQU0sR0FBR0QsT0FBTyxDQUFDLFFBQUQsQ0FBdEI7O0FBQ0EsSUFBTUUsR0FBRyxHQUFHLDBCQUFaO0FBQ0EsSUFBTUMsSUFBSSxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsSUFBWixJQUFvQixJQUFqQzs7QUFDQSxJQUFNRyxJQUFJLEdBQUdOLE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUNBQSxPQUFPLENBQUMsUUFBRCxDQUFQLENBQWtCQyxNQUFsQixHLENBQTRCOzs7QUFDNUIsSUFBSU0sT0FBTyxHQUFHUCxPQUFPLENBQUMsaUJBQUQsQ0FBckIsQyxDQUdBOzs7QUFDQUUsR0FBRyxDQUFDTSxHQUFKLENBQVFGLElBQUksRUFBWjtBQUNBSixHQUFHLENBQUNNLEdBQUosQ0FBUUMsb0JBQVFDLElBQVIsRUFBUjtBQUNBUixHQUFHLENBQUNNLEdBQUosQ0FBUUQsT0FBTyxDQUFDO0FBQUNJLEVBQUFBLE1BQU0sRUFBQyxPQUFSO0FBQWlCQyxFQUFBQSxNQUFNLEVBQUUsS0FBekI7QUFBZ0NDLEVBQUFBLGlCQUFpQixFQUFFO0FBQW5ELENBQUQsQ0FBZixFLENBQ0E7O0FBRUEsSUFBTUMsR0FBRyxHQUFHVixPQUFPLENBQUNDLEdBQVIsQ0FBWVUsU0FBeEI7QUFDQSxJQUFNQyxHQUFHLEdBQUdaLE9BQU8sQ0FBQ0MsR0FBUixDQUFZWSxVQUF4QjtBQUNBQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUwsR0FBWixFLENBQ0E7O0FBRUFmLFFBQVEsQ0FBQ3FCLE9BQVQsQ0FBaUJOLEdBQWpCLEVBQXNCO0FBQUVPLEVBQUFBLGVBQWUsRUFBRSxJQUFuQjtBQUF5QkMsRUFBQUEsY0FBYyxFQUFFLElBQXpDO0FBQWdEQyxFQUFBQSxrQkFBa0IsRUFBRTtBQUFwRSxDQUF0QjtBQUNBLElBQU1DLE1BQU0sR0FBR3pCLFFBQVEsQ0FBQzBCLFVBQXhCO0FBRUFELE1BQU0sQ0FBQ0UsSUFBUCxDQUFZLE1BQVosRUFBb0IsWUFBTTtBQUN4QlIsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksdUJBQVo7QUFDRCxDQUZELEUsQ0FNQTs7QUFDQSxJQUFNUSxXQUFXLEdBQUczQixPQUFPLENBQUMsaUJBQUQsQ0FBM0I7O0FBQ0EsSUFBTTRCLFdBQVcsR0FBRzVCLE9BQU8sQ0FBQyxpQkFBRCxDQUEzQjs7QUFDQSxJQUFNNkIsY0FBYyxHQUFHN0IsT0FBTyxDQUFDLG9CQUFELENBQTlCOztBQUNBLElBQU04QixlQUFlLEdBQUc5QixPQUFPLENBQUMscUJBQUQsQ0FBL0I7O0FBQ0EsSUFBTStCLFVBQVUsR0FBRy9CLE9BQU8sQ0FBQyxnQkFBRCxDQUExQjs7QUFFQUUsR0FBRyxDQUFDTSxHQUFKLENBQVEsUUFBUixFQUFrQm1CLFdBQWxCLEUsQ0FBZ0M7O0FBQ2hDekIsR0FBRyxDQUFDTSxHQUFKLENBQVEsZ0JBQVIsRUFBMEJxQixjQUExQjtBQUNBM0IsR0FBRyxDQUFDTSxHQUFKLENBQVEsY0FBUixFQUF3QnNCLGVBQXhCO0FBQ0E1QixHQUFHLENBQUNNLEdBQUosQ0FBUSxzQkFBUixFQUFnQ29CLFdBQWhDO0FBQ0ExQixHQUFHLENBQUNNLEdBQUosQ0FBUSxZQUFSLEVBQXNCdUIsVUFBdEI7QUFFQTdCLEdBQUcsQ0FBQzhCLE1BQUosQ0FBVzdCLElBQVgsRUFBaUI7QUFBQSxTQUFNZSxPQUFPLENBQUNDLEdBQVIsQ0FBWSx3QkFBWixDQUFOO0FBQUEsQ0FBakIsRSxDQUFnRSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGNjaGV3bmluZ1xcRG9jdW1lbnRzXFxyZWFjdC1mb3VyXFxiYWNrZW5kXFxzcmNcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xyXG4vL2ltcG9ydCBib2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJzsgZG9uJ3QgbmVlZCBiLmMgb2YgdGhlIG5ldyB2ZXJzaW9uIG9mIGV4cHJlc3MuXHJcbi8vaW1wb3J0IHsgTW9uZ29DbGllbnQgfSBmcm9tICdtb25nb2RiJzsgLy9jYW4gY29ubmVjdCB0byBsb2NhbCBkYlxyXG5jb25zdCBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7IC8vaGVscHMgdXMgY29ubmVjdCB0byBtb25nb2RiIGRhdGFiYXNlXHJcbmNvbnN0IGNvbmZpZyA9IHJlcXVpcmUoJ2NvbmZpZycpO1xyXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XHJcbmNvbnN0IHBvcnQgPSBwcm9jZXNzLmVudi5wb3J0IHx8IDgwMDA7XHJcbmNvbnN0IGNvcnMgPSByZXF1aXJlKCdjb3JzJyk7XHJcbnJlcXVpcmUoJ2RvdGVudicpLmNvbmZpZygpOyAvL2VudiB2YXJpYWJsZXMgY2FuIGJlIGluIHRoZSBkb3RlbnYgZmlsZS5cclxudmFyIHNlc3Npb24gPSByZXF1aXJlKCdleHByZXNzLXNlc3Npb24nKTtcclxuXHJcblxyXG4vL21pZGRsZXdhcmVcclxuYXBwLnVzZShjb3JzKCkpO1xyXG5hcHAudXNlKGV4cHJlc3MuanNvbigpKTtcclxuYXBwLnVzZShzZXNzaW9uKHtzZWNyZXQ6XCJoZWxsb1wiLCByZXNhdmU6IGZhbHNlLCBzYXZlVW5pbml0aWFsaXplZDogdHJ1ZX0pKVxyXG4vL2FwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xyXG5cclxuY29uc3QgdXJpID0gcHJvY2Vzcy5lbnYuQVRMQVNfVVJJO1xyXG5jb25zdCBqd3QgPSBwcm9jZXNzLmVudi5KV1RfU0VDUkVUO1xyXG5jb25zb2xlLmxvZyh1cmkpO1xyXG4vL21vbmdvb3NlLmNvbm5lY3QodXJpLCB7IHVzZU5ld1VybFBhcnNlcjogdHJ1ZTsgdXNlQ3JlYXRlSW5kZXg6IHRydWU7IH0pOyAvL0ZMQUdTOiBtb25nb2RiIG5vZGVqcyBkcml2ZXIgcGFyc2VzIHRoZSBjb25uZWN0aW9uIHN0cmluZy4gdXNlQ3JlYXRlSW5kZXg6IG1vbmdvZGIgZGVwcmVjYXRpbmcgZW5zdXJlIGluZGV4IGZuXHJcblxyXG5tb25nb29zZS5jb25uZWN0KHVyaSwgeyB1c2VOZXdVcmxQYXJzZXI6IHRydWUsIHVzZUNyZWF0ZUluZGV4OiB0cnVlLCAgdXNlVW5pZmllZFRvcG9sb2d5OiB0cnVlIH0pO1xyXG5jb25zdCBjbGllbnQgPSBtb25nb29zZS5jb25uZWN0aW9uO1xyXG5cclxuY2xpZW50Lm9uY2UoJ29wZW4nLCAoKSA9PiB7XHJcbiAgY29uc29sZS5sb2coXCJNb25nb0RCIGlzIGNvbm5lY3RlZC5cIilcclxufSlcclxuXHJcblxyXG5cclxuLy9yZXF1aXJlIHRoZSBmaWxlcyBhbmQgdXNlIHRoZW0uXHJcbmNvbnN0IHVzZXJzUm91dGVyID0gcmVxdWlyZSgnLi4vcm91dGVzL3VzZXJzJyk7XHJcbmNvbnN0IHBvc3RzUm91dGVyID0gcmVxdWlyZSgnLi4vcm91dGVzL3Bvc3RzJyk7XHJcbmNvbnN0IGNvbW1lbnRzUm91dGVyID0gcmVxdWlyZSgnLi4vcm91dGVzL2NvbW1lbnRzJyk7XHJcbmNvbnN0IGJyZXdlcmllc1JvdXRlciA9IHJlcXVpcmUoJy4uL3JvdXRlcy9icmV3ZXJpZXMnKTtcclxuY29uc3QgYXV0aFJvdXRlciA9IHJlcXVpcmUoJy4uL3JvdXRlcy9hdXRoJyk7XHJcblxyXG5hcHAudXNlKCcvdXNlcnMnLCB1c2Vyc1JvdXRlcik7IC8vIG1lYW5zIC91c2VycyBpcyB0aGUgYmFzZSByb3V0ZVxyXG5hcHAudXNlKCcvYXBpL2NvbW11bml0eScsIGNvbW1lbnRzUm91dGVyKTtcclxuYXBwLnVzZSgnL2FwaS9icmV3ZXJ5JywgYnJld2VyaWVzUm91dGVyKTtcclxuYXBwLnVzZSgnL2FwaS9jb21tdW5pdHkvcG9zdHMnLCBwb3N0c1JvdXRlcik7XHJcbmFwcC51c2UoJy9hcGkvbG9naW4nLCBhdXRoUm91dGVyKTtcclxuXHJcbmFwcC5saXN0ZW4ocG9ydCwgKCkgPT4gY29uc29sZS5sb2coJ0xpc3RlbmluZyBvbiBwb3J0IDgwMDAnKSk7ICAvL2FyZ3VtZW50IHRvIHNwZWNpZnkgd2hpY2ggcG9ydCB0byBsaXN0ZW4gb24uIHRoZW4gYSBjYWxsYmFja1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "mongoose",
        "require",
        "config",
        "app",
        "port",
        "process",
        "env",
        "cors",
        "session",
        "use",
        "express",
        "json",
        "secret",
        "resave",
        "saveUninitialized",
        "uri",
        "ATLAS_URI",
        "jwt",
        "JWT_SECRET",
        "console",
        "log",
        "connect",
        "useNewUrlParser",
        "useCreateIndex",
        "useUnifiedTopology",
        "client",
        "connection",
        "once",
        "usersRouter",
        "postsRouter",
        "commentsRouter",
        "breweriesRouter",
        "authRouter",
        "listen"
      ],
      "mappings": ";;AAAA;;;;AACA;AACA;AACA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB,C,CAAsC;;;AACtC,IAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAME,GAAG,GAAG,0BAAZ;AACA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;;AACA,IAAMG,IAAI,GAAGN,OAAO,CAAC,MAAD,CAApB;;AACAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB,G,CAA4B;;;AAC5B,IAAIM,OAAO,GAAGP,OAAO,CAAC,iBAAD,CAArB,C,CAGA;;;AACAE,GAAG,CAACM,GAAJ,CAAQF,IAAI,EAAZ;AACAJ,GAAG,CAACM,GAAJ,CAAQC,oBAAQC,IAAR,EAAR;AACAR,GAAG,CAACM,GAAJ,CAAQD,OAAO,CAAC;AAACI,EAAAA,MAAM,EAAC,OAAR;AAAiBC,EAAAA,MAAM,EAAE,KAAzB;AAAgCC,EAAAA,iBAAiB,EAAE;AAAnD,CAAD,CAAf,E,CACA;;AAEA,IAAMC,GAAG,GAAGV,OAAO,CAACC,GAAR,CAAYU,SAAxB;AACA,IAAMC,GAAG,GAAGZ,OAAO,CAACC,GAAR,CAAYY,UAAxB;AACAC,OAAO,CAACC,GAAR,CAAYL,GAAZ,E,CACA;;AAEAf,QAAQ,CAACqB,OAAT,CAAiBN,GAAjB,EAAsB;AAAEO,EAAAA,eAAe,EAAE,IAAnB;AAAyBC,EAAAA,cAAc,EAAE,IAAzC;AAAgDC,EAAAA,kBAAkB,EAAE;AAApE,CAAtB;AACA,IAAMC,MAAM,GAAGzB,QAAQ,CAAC0B,UAAxB;AAEAD,MAAM,CAACE,IAAP,CAAY,MAAZ,EAAoB,YAAM;AACxBR,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD,CAFD,E,CAMA;;AACA,IAAMQ,WAAW,GAAG3B,OAAO,CAAC,iBAAD,CAA3B;;AACA,IAAM4B,WAAW,GAAG5B,OAAO,CAAC,iBAAD,CAA3B;;AACA,IAAM6B,cAAc,GAAG7B,OAAO,CAAC,oBAAD,CAA9B;;AACA,IAAM8B,eAAe,GAAG9B,OAAO,CAAC,qBAAD,CAA/B;;AACA,IAAM+B,UAAU,GAAG/B,OAAO,CAAC,gBAAD,CAA1B;;AAEAE,GAAG,CAACM,GAAJ,CAAQ,QAAR,EAAkBmB,WAAlB,E,CAAgC;;AAChCzB,GAAG,CAACM,GAAJ,CAAQ,gBAAR,EAA0BqB,cAA1B;AACA3B,GAAG,CAACM,GAAJ,CAAQ,cAAR,EAAwBsB,eAAxB;AACA5B,GAAG,CAACM,GAAJ,CAAQ,sBAAR,EAAgCoB,WAAhC;AACA1B,GAAG,CAACM,GAAJ,CAAQ,YAAR,EAAsBuB,UAAtB;AAEA7B,GAAG,CAAC8B,MAAJ,CAAW7B,IAAX,EAAiB;AAAA,SAAMe,OAAO,CAACC,GAAR,CAAY,wBAAZ,CAAN;AAAA,CAAjB,E,CAAgE",
      "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\src\\",
      "sourcesContent": [
        "import express from 'express';\r\n//import bodyParser from 'body-parser'; don't need b.c of the new version of express.\r\n//import { MongoClient } from 'mongodb'; //can connect to local db\r\nconst mongoose = require('mongoose'); //helps us connect to mongodb database\r\nconst config = require('config');\r\nconst app = express();\r\nconst port = process.env.port || 8000;\r\nconst cors = require('cors');\r\nrequire('dotenv').config(); //env variables can be in the dotenv file.\r\nvar session = require('express-session');\r\n\r\n\r\n//middleware\r\napp.use(cors());\r\napp.use(express.json());\r\napp.use(session({secret:\"hello\", resave: false, saveUninitialized: true}))\r\n//app.use(bodyParser.json());\r\n\r\nconst uri = process.env.ATLAS_URI;\r\nconst jwt = process.env.JWT_SECRET;\r\nconsole.log(uri);\r\n//mongoose.connect(uri, { useNewUrlParser: true; useCreateIndex: true; }); //FLAGS: mongodb nodejs driver parses the connection string. useCreateIndex: mongodb deprecating ensure index fn\r\n\r\nmongoose.connect(uri, { useNewUrlParser: true, useCreateIndex: true,  useUnifiedTopology: true });\r\nconst client = mongoose.connection;\r\n\r\nclient.once('open', () => {\r\n  console.log(\"MongoDB is connected.\")\r\n})\r\n\r\n\r\n\r\n//require the files and use them.\r\nconst usersRouter = require('../routes/users');\r\nconst postsRouter = require('../routes/posts');\r\nconst commentsRouter = require('../routes/comments');\r\nconst breweriesRouter = require('../routes/breweries');\r\nconst authRouter = require('../routes/auth');\r\n\r\napp.use('/users', usersRouter); // means /users is the base route\r\napp.use('/api/community', commentsRouter);\r\napp.use('/api/brewery', breweriesRouter);\r\napp.use('/api/community/posts', postsRouter);\r\napp.use('/api/login', authRouter);\r\n\r\napp.listen(port, () => console.log('Listening on port 8000'));  //argument to specify which port to listen on. then a callback\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1606853559930
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\",\"filename\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\\\\routes\\\\users.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\cchewning\\Documents\\react-four\\backend",
      "filename": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\users.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\cchewning\\Documents\\react-four\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\users.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\",
        "sourceFileName": "users.js"
      }
    },
    "ast": null,
    "code": "const router = require('express').Router();\n\nrequire('dotenv').config(); //env variables can be in the dotenv file.\n\n\nlet User = require('../models/user.model');\n\nconst Bcrypt = require(\"bcryptjs\");\n\nconst config = require('config');\n\nconst jwt = require(\"jsonwebtoken\");\n\nconst multer = require('multer');\n\nconst path = require(\"path\");\n\nconst token = process.env.JWT_SECRET;\nvar storage = multer.diskStorage({\n  destination: \"public/uploads/images\",\n  filename: function (req, file, cb) {\n    cb(null, \"IMAGE-\" + Date.now() + path.extname(file.originalname));\n  }\n});\nconst upload = multer({\n  storage: storage,\n  limits: {\n    fileSize: 1000000\n  }\n}).single(\"image\");\nrouter.route(\"/update-image/:id\").post((req, res) => {\n  upload(req, res, err => {\n    const image = req.file.filename;\n    const id = req.params.id;\n    console.log(req.file, ' req.file');\n    console.log(image, ' image');\n    User.findByIdAndUpdate({\n      _id: req.params.id\n    }, {\n      $set: {\n        image: req.file.filename\n      }\n    }).then(user => res.send(image)).catch(err => res.status(400).json('Error: ' + err));\n  });\n}); // console.log(upload, ' upload')\n// router.route('/update-image/:id').post((req, res) {\n//   upload(req, res, err) {\n//     if (err) {\n//\n//     }\n//   }\n//   upload(req, res, function (err) {\n//     if (err) {\n//       // This is a good practice when you want to handle your errors differently\n//\n//\n//   console.log(req.file, 'req file') //undefined\n//   //const image = req.body\n//   const id = req.params.id;\n//   const image = req.file.filename;\n// console.log(image, ' image')\n//   User.findByIdAndUpdate(id, image)\n//   .then(() => res.json('Image updated'))\n//   .catch(err => res.status(400).json('Error: ' + err))\n// })\n//app.post('/editPhoto', (req, res, next) => {\n//   upload(req, res, function (err) {\n//     if (err) {\n//       // This is a good practice when you want to handle your errors differently\n//\n//       return\n//     }\n//\n//     // Everything went fine\n//   })\n// })\n//GET ALL USERS\n\nrouter.route('/').get((req, res) => {\n  User.find().then(users => res.json(users)).catch(err => res.status(400).json('Error ' + err));\n}); //GET A SPECIFIC USER\n\nrouter.route('/:id').get((req, res) => {\n  User.findById(req.params.id).then(user => res.json(user)).catch(err => res.status(400).json('Error: ' + err));\n}); //ADD USER\n\nrouter.route('/adduser').post((req, res, user) => {\n  const {\n    username,\n    email,\n    password,\n    passwordConfirm,\n    image\n  } = req.body; //JWT\n\n  const payload = {\n    id: user._id\n  };\n  const options = {\n    expiresIn: 3600\n  };\n  const secret = process.env.JWT_SECRET;\n  const token = jwt.sign(payload, secret, options);\n  console.log(secret, ' this is secret'); //PW MATCH VALIDATION\n\n  if (password !== passwordConfirm) {\n    return res.status(400).json({\n      msg: 'Passwords do not match'\n    });\n  } //PW REGEX VALIDATION\n\n\n  var pwValidate = /^(?=.*)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9]).{8,1024}$/;\n\n  if (!password.match(pwValidate)) {\n    return res.status(400).json({\n      msg: 'Password must be at least 8 characters, have a capital, and have a special character'\n    });\n  } //HASH PW\n\n\n  Bcrypt.hash(password, 12).then(hashedpassword => {\n    const newUser = new User({\n      username,\n      email,\n      password: hashedpassword,\n      passwordConfirm: hashedpassword,\n      image\n    });\n    newUser.save().then(() => res.json({\n      success: true,\n      message: \"here's your token\",\n      token: token\n    })).catch(err => res.status(400).json('Error ' + err));\n  });\n}); //DELETE USER\n\nrouter.route('/:id').delete((req, res) => {\n  User.findByIdAndDelete(req.params.id).then(() => res.json('User deleted.')).catch(err => res.status(400).json('Error: ' + err));\n});\nrouter.route('/update-email/:id').post((req, res) => {\n  const id = req.params.id;\n  const email = req.body;\n  User.findByIdAndUpdate(id, email).then(() => res.json('User Updated.')).catch(err => res.status(400).json('Error: ' + err));\n}); //\n// router.post('/update-image:/idd', upload.single('image'), async (req, res) => {\n//   const id = req.params.id;\n//   const image = req.body;\n//   User.findByIdAndUpdate(id, image)\n//   .then(() => res.json('User updated'))\n//   .catch(err => res.status(400).json('Error' + err))\n// })\n//var upload = multer({ storage: storage }).single('myImage');\n// router.route('/update-image/:id').post((upload.single('image'), req, res) => {\n//   console.log(request.file);\n//   //img: request.file.filename;\n//   const id = req.params.id;\n//   const image = req.body;\n//   User.findByIdAndUpdate(id, image)\n//   .then(user => res.json('User updated'))\n//   .catch(err => res.status(400).json('Error: ' + err))\n// })\n\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "router",
        "require",
        "Router",
        "config",
        "User",
        "Bcrypt",
        "jwt",
        "multer",
        "path",
        "token",
        "process",
        "env",
        "JWT_SECRET",
        "storage",
        "diskStorage",
        "destination",
        "filename",
        "req",
        "file",
        "cb",
        "Date",
        "now",
        "extname",
        "originalname",
        "upload",
        "limits",
        "fileSize",
        "single",
        "route",
        "post",
        "res",
        "err",
        "image",
        "id",
        "params",
        "console",
        "log",
        "findByIdAndUpdate",
        "_id",
        "$set",
        "then",
        "user",
        "send",
        "catch",
        "status",
        "json",
        "get",
        "find",
        "users",
        "findById",
        "username",
        "email",
        "password",
        "passwordConfirm",
        "body",
        "payload",
        "options",
        "expiresIn",
        "secret",
        "sign",
        "msg",
        "pwValidate",
        "match",
        "hash",
        "hashedpassword",
        "newUser",
        "save",
        "success",
        "message",
        "delete",
        "findByIdAndDelete",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\",
      "sourcesContent": [
        "const router = require('express').Router();\r\nrequire('dotenv').config(); //env variables can be in the dotenv file.\r\nlet User = require('../models/user.model');\r\nconst Bcrypt = require(\"bcryptjs\");\r\nconst config = require('config');\r\nconst jwt = require(\"jsonwebtoken\");\r\nconst multer = require('multer');\r\nconst path = require(\"path\");\r\n\r\nconst token = process.env.JWT_SECRET;\r\n\r\nvar storage = multer.diskStorage({\r\n   destination: \"public/uploads/images\",\r\n   filename: function(req, file, cb){\r\n      cb(null,\"IMAGE-\" + Date.now() + path.extname(file.originalname));\r\n   }\r\n});\r\n\r\nconst upload = multer({\r\n   storage: storage,\r\n   limits:{fileSize: 1000000},\r\n}).single(\"image\");\r\n\r\n\r\nrouter.route(\"/update-image/:id\").post((req, res) => {\r\n  upload(req, res, (err) => {\r\n  const image = req.file.filename;\r\n  const id = req.params.id;\r\n  console.log(req.file, ' req.file')\r\n  console.log(image, ' image')\r\n  User.findByIdAndUpdate({_id: req.params.id},\r\n  {$set: { image: req.file.filename}})\r\n  .then(user => res.send(image))\r\n  .catch(err => res.status(400).json('Error: ' + err))\r\n})\r\n})\r\n\r\n\r\n\r\n// console.log(upload, ' upload')\r\n// router.route('/update-image/:id').post((req, res) {\r\n//   upload(req, res, err) {\r\n//     if (err) {\r\n//\r\n//     }\r\n//   }\r\n  //   upload(req, res, function (err) {\r\n  //     if (err) {\r\n  //       // This is a good practice when you want to handle your errors differently\r\n  //\r\n//\r\n//   console.log(req.file, 'req file') //undefined\r\n//   //const image = req.body\r\n//   const id = req.params.id;\r\n//   const image = req.file.filename;\r\n// console.log(image, ' image')\r\n//   User.findByIdAndUpdate(id, image)\r\n//   .then(() => res.json('Image updated'))\r\n//   .catch(err => res.status(400).json('Error: ' + err))\r\n// })\r\n\r\n\r\n\r\n//app.post('/editPhoto', (req, res, next) => {\r\n//   upload(req, res, function (err) {\r\n//     if (err) {\r\n//       // This is a good practice when you want to handle your errors differently\r\n//\r\n//       return\r\n//     }\r\n//\r\n//     // Everything went fine\r\n//   })\r\n// })\r\n\r\n\r\n//GET ALL USERS\r\nrouter.route('/').get((req, res) => {\r\n  User.find()\r\n  .then(users => res.json(users))\r\n  .catch(err => res.status(400).json('Error ' + err))\r\n})\r\n\r\n//GET A SPECIFIC USER\r\nrouter.route('/:id').get((req, res) => {\r\n  User.findById(req.params.id)\r\n  .then(user => res.json(user))\r\n  .catch(err => res.status(400).json('Error: ' + err))\r\n})\r\n\r\n\r\n\r\n//ADD USER\r\nrouter.route('/adduser').post((req, res, user) => {\r\n  const {username, email, password, passwordConfirm, image} = req.body\r\n  //JWT\r\n  const payload = { id: user._id };\r\n  const options = {expiresIn: 3600};\r\n  const secret = process.env.JWT_SECRET;\r\n  const token = jwt.sign(payload, secret, options);\r\n\r\n  console.log(secret, ' this is secret')\r\n  //PW MATCH VALIDATION\r\n  if (password !== passwordConfirm){\r\n    return res.status(400).json({ msg: 'Passwords do not match' });\r\n  }\r\n\r\n  //PW REGEX VALIDATION\r\n  var pwValidate =  /^(?=.*)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9]).{8,1024}$/;\r\n  if(!password.match(pwValidate))\r\n  {\r\n    return res.status(400).json({ msg: 'Password must be at least 8 characters, have a capital, and have a special character'})\r\n  }\r\n\r\n  //HASH PW\r\n  Bcrypt.hash(password, 12)\r\n  .then(hashedpassword =>{\r\n  const newUser = new User({\r\n    username,\r\n    email,\r\n    password: hashedpassword,\r\n    passwordConfirm: hashedpassword,\r\n    image\r\n  });\r\n  newUser.save()\r\n  .then(() => res.json({success: true, message: \"here's your token\", token: token}))\r\n  .catch(err => res.status(400).json('Error ' + err))\r\n});\r\n});\r\n\r\n\r\n//DELETE USER\r\nrouter.route('/:id').delete((req, res) => {\r\n  User.findByIdAndDelete(req.params.id)\r\n  .then(() => res.json('User deleted.'))\r\n  .catch(err => res.status(400).json('Error: ' + err))\r\n})\r\n\r\n\r\n\r\n\r\nrouter.route('/update-email/:id').post((req, res) => {\r\n  const id = req.params.id;\r\n  const email = req.body;\r\n  User.findByIdAndUpdate(id, email)\r\n  .then(() => res.json('User Updated.'))\r\n  .catch(err => res.status(400).json('Error: ' + err))\r\n})\r\n\r\n//\r\n// router.post('/update-image:/idd', upload.single('image'), async (req, res) => {\r\n//   const id = req.params.id;\r\n//   const image = req.body;\r\n//   User.findByIdAndUpdate(id, image)\r\n//   .then(() => res.json('User updated'))\r\n//   .catch(err => res.status(400).json('Error' + err))\r\n// })\r\n\r\n//var upload = multer({ storage: storage }).single('myImage');\r\n\r\n\r\n// router.route('/update-image/:id').post((upload.single('image'), req, res) => {\r\n//   console.log(request.file);\r\n//   //img: request.file.filename;\r\n//   const id = req.params.id;\r\n//   const image = req.body;\r\n//   User.findByIdAndUpdate(id, image)\r\n//   .then(user => res.json('User updated'))\r\n//   .catch(err => res.status(400).json('Error: ' + err))\r\n// })\r\n\r\nmodule.exports = router;\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1607142573932
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\",\"filename\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\\\\routes\\\\comments.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\cchewning\\Documents\\react-four\\backend",
      "filename": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\comments.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\cchewning\\Documents\\react-four\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\comments.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\comments.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\",
        "sourceFileName": "comments.js"
      }
    },
    "ast": null,
    "code": "const router = require('express').Router();\n\nlet Comment = require('../models/comment.model');\n\nlet Post = require('../models/post.model');\n\nconst auth = require('../middleware/auth'); //GET COMMENTS\n\n\nrouter.route('/brewery-meetup').get(async (req, res) => {\n  try {\n    //Comment.findOne({name: postName})\n    const postName = req.params.name; //postName gets name from url paramters\n\n    const postInfo = await Post.comments.find(); //matches name url paramter we passed. Mongo returns client object we can use to send queries to the db\n\n    res.status(200).json(postInfo); //instead of send, use json since we are working with json.\n  } catch (error) {\n    res.status(500).json({\n      'message': 'Error',\n      error\n    });\n  }\n}); //GET ALL POSTS, COMMENTS AND UPVOTES\n//SEE EVERY COMMENT (working)\n\nrouter.route('/').get((req, res) => {\n  Comment.find().then(comments => res.json(comments)).catch(err => res.status(400).json('Error ' + err));\n});\nrouter.route('/brewery-meetup/test').get((req, res) => {\n  Comment.find().then(comments => res.json(comments)).catch(err => res.status(400).json('Error ' + err));\n}); //UPDATE A POST WITH A COMMENT\n\nrouter.route('/:id/add-comment').post(auth, async (req, res) => {\n  const {\n    username,\n    votes,\n    comment\n  } = req.body;\n\n  try {\n    const postId = req.params.id; //set the req id to a variable\n\n    const saveCommentToPost = await Post.findById({\n      _id: postId\n    }); //.populate(User)//  //.populate(User) later\n\n    const post = await Post.updateOne({\n      _id: postId\n    }, {\n      //update the id that matches req.params.id (ex: brewery-meetup id)\n      '$set': {\n        comments: saveCommentToPost.comments.concat({\n          username,\n          votes,\n          comment\n        })\n      }\n    });\n    res.send(post);\n  } catch (err) {\n    res.status(400).send(err);\n  }\n});\nrouter.route('/:name/upvotes').post((req, res) => {\n  const postName = req.params.name; //postName gets name from url paramters\n\n  Comment.findOne({\n    name: postName\n  }) //change to Post\n  .then(comments => res.json(comments)).catch(err => res.status(400).json('Error ' + err));\n}); //UPVOTE ENDPOINT\n\nrouter.route('/:name/upvotes').post((req, res) => {\n  const postName = req.params.name;\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbW1lbnRzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsInJlcXVpcmUiLCJSb3V0ZXIiLCJDb21tZW50IiwiUG9zdCIsImF1dGgiLCJyb3V0ZSIsImdldCIsInJlcSIsInJlcyIsInBvc3ROYW1lIiwicGFyYW1zIiwibmFtZSIsInBvc3RJbmZvIiwiY29tbWVudHMiLCJmaW5kIiwic3RhdHVzIiwianNvbiIsImVycm9yIiwidGhlbiIsImNhdGNoIiwiZXJyIiwicG9zdCIsInVzZXJuYW1lIiwidm90ZXMiLCJjb21tZW50IiwiYm9keSIsInBvc3RJZCIsImlkIiwic2F2ZUNvbW1lbnRUb1Bvc3QiLCJmaW5kQnlJZCIsIl9pZCIsInVwZGF0ZU9uZSIsImNvbmNhdCIsInNlbmQiLCJmaW5kT25lIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsTUFBTSxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUFQLENBQW1CQyxNQUFuQixFQUFmOztBQUNBLElBQUlDLE9BQU8sR0FBR0YsT0FBTyxDQUFDLHlCQUFELENBQXJCOztBQUNBLElBQUlHLElBQUksR0FBR0gsT0FBTyxDQUFDLHNCQUFELENBQWxCOztBQUNBLE1BQU1JLElBQUksR0FBR0osT0FBTyxDQUFDLG9CQUFELENBQXBCLEMsQ0FFQTs7O0FBQ0FELE1BQU0sQ0FBQ00sS0FBUCxDQUFhLGlCQUFiLEVBQWdDQyxHQUFoQyxDQUFvQyxPQUFPQyxHQUFQLEVBQVlDLEdBQVosS0FBb0I7QUFDdEQsTUFBSTtBQUNOO0FBRUUsVUFBTUMsUUFBUSxHQUFHRixHQUFHLENBQUNHLE1BQUosQ0FBV0MsSUFBNUIsQ0FISSxDQUc4Qjs7QUFDbEMsVUFBTUMsUUFBUSxHQUFHLE1BQU1ULElBQUksQ0FBQ1UsUUFBTCxDQUFjQyxJQUFkLEVBQXZCLENBSkksQ0FJeUM7O0FBQzdDTixJQUFBQSxHQUFHLENBQUNPLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQkosUUFBckIsRUFMSSxDQUs0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TyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUIsV0FBV0ksR0FBaEMsQ0FGZDtBQUdELENBTEQsRSxDQVNBOztBQUNBckIsTUFBTSxDQUFDTSxLQUFQLENBQWEsZ0JBQWIsRUFBK0JnQixJQUEvQixDQUFvQyxDQUFDZCxHQUFELEVBQU1DLEdBQU4sS0FBYztBQUNoRCxRQUFNQyxRQUFRLEdBQUdGLEdBQUcsQ0FBQ0csTUFBSixDQUFXQyxJQUE1QjtBQUNELENBRkQ7QUFLQXdCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnJDLE1BQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcY2NoZXduaW5nXFxEb2N1bWVudHNcXHJlYWN0LWZvdXJcXGJhY2tlbmRcXHJvdXRlc1xcIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgcm91dGVyID0gcmVxdWlyZSgnZXhwcmVzcycpLlJvdXRlcigpO1xyXG5sZXQgQ29tbWVudCA9IHJlcXVpcmUoJy4uL21vZGVscy9jb21tZW50Lm1vZGVsJyk7XHJcbmxldCBQb3N0ID0gcmVxdWlyZSgnLi4vbW9kZWxzL3Bvc3QubW9kZWwnKTtcclxuY29uc3QgYXV0aCA9IHJlcXVpcmUoJy4uL21pZGRsZXdhcmUvYXV0aCcpO1xyXG5cclxuLy9HRVQgQ09NTUVOVFNcclxucm91dGVyLnJvdXRlKCcvYnJld2VyeS1tZWV0dXAnKS5nZXQoYXN5bmMgKHJlcSwgcmVzKSA9PiB7XHJcbiAgdHJ5IHtcclxuLy9Db21tZW50LmZpbmRPbmUoe25hbWU6IHBvc3ROYW1lfSlcclxuXHJcbiAgY29uc3QgcG9zdE5hbWUgPSByZXEucGFyYW1zLm5hbWU7IC8vcG9zdE5hbWUgZ2V0cyBuYW1lIGZyb20gdXJsIHBhcmFtdGVyc1xyXG4gIGNvbnN0IHBvc3RJbmZvID0gYXdhaXQgUG9zdC5jb21tZW50cy5maW5kKCkgIC8vbWF0Y2hlcyBuYW1lIHVybCBwYXJhbXRlciB3ZSBwYXNzZWQuIE1vbmdvIHJldHVybnMgY2xpZW50IG9iamVjdCB3ZSBjYW4gdXNlIHRvIHNlbmQgcXVlcmllcyB0byB0aGUgZGJcclxuICByZXMuc3RhdHVzKDIwMCkuanNvbihwb3N0SW5mbyk7IC8vaW5zdGVhZCBvZiBzZW5kLCB1c2UganNvbiBzaW5jZSB3ZSBhcmUgd29ya2luZyB3aXRoIGpzb24uXHJcbn0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyAnbWVzc2FnZSc6ICdFcnJvcicsIGVycm9yIH0pXHJcbn1cclxufSlcclxuXHJcblxyXG4vL0dFVCBBTEwgUE9TVFMsIENPTU1FTlRTIEFORCBVUFZPVEVTXHJcbi8vU0VFIEVWRVJZIENPTU1FTlQgKHdvcmtpbmcpXHJcbnJvdXRlci5yb3V0ZSgnLycpLmdldCgocmVxLCByZXMpID0+IHtcclxuICBDb21tZW50LmZpbmQoKVxyXG4gIC50aGVuKGNvbW1lbnRzID0+IHJlcy5qc29uKGNvbW1lbnRzKSlcclxuICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoNDAwKS5qc29uKCdFcnJvciAnICsgZXJyKSlcclxufSlcclxuXHJcblxyXG5yb3V0ZXIucm91dGUoJy9icmV3ZXJ5LW1lZXR1cC90ZXN0JykuZ2V0KChyZXEsIHJlcykgPT4ge1xyXG4gIENvbW1lbnQuZmluZCgpXHJcbiAgLnRoZW4oY29tbWVudHMgPT4gcmVzLmpzb24oY29tbWVudHMpKVxyXG4gIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyg0MDApLmpzb24oJ0Vycm9yICcgKyBlcnIpKVxyXG59KVxyXG5cclxuXHJcblxyXG5cclxuLy9VUERBVEUgQSBQT1NUIFdJVEggQSBDT01NRU5UXHJcbnJvdXRlci5yb3V0ZSgnLzppZC9hZGQtY29tbWVudCcpLnBvc3QoYXV0aCwgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XHJcbmNvbnN0IHt1c2VybmFtZSwgdm90ZXMsIGNvbW1lbnQgfSA9IHJlcS5ib2R5O1xyXG50cnkge1xyXG5jb25zdCBwb3N0SWQgPSByZXEucGFyYW1zLmlkOyAvL3NldCB0aGUgcmVxIGlkIHRvIGEgdmFyaWFibGVcclxuICBjb25zdCBzYXZlQ29tbWVudFRvUG9zdCA9IGF3YWl0IFBvc3QuZmluZEJ5SWQoe19pZDogcG9zdElkfSkvLy5wb3B1bGF0ZShVc2VyKS8vICAvLy5wb3B1bGF0ZShVc2VyKSBsYXRlclxyXG4gICAgY29uc3QgcG9zdCA9IGF3YWl0IFBvc3QudXBkYXRlT25lKHsgX2lkIDogcG9zdElkIH0sIHsgLy91cGRhdGUgdGhlIGlkIHRoYXQgbWF0Y2hlcyByZXEucGFyYW1zLmlkIChleDogYnJld2VyeS1tZWV0dXAgaWQpXHJcbiAgICAnJHNldCc6IHtcclxuICAgICAgY29tbWVudHM6IHNhdmVDb21tZW50VG9Qb3N0LmNvbW1lbnRzLmNvbmNhdCh7IHVzZXJuYW1lLCB2b3RlcywgY29tbWVudCB9KVxyXG4gICAgfSxcclxuICB9KVxyXG4gIHJlcy5zZW5kKHBvc3QpXHJcbn1jYXRjaChlcnIpe1xyXG4gIHJlcy5zdGF0dXMoNDAwKS5zZW5kKGVycik7XHJcbn1cclxufSlcclxuXHJcblxyXG5cclxucm91dGVyLnJvdXRlKCcvOm5hbWUvdXB2b3RlcycpLnBvc3QoKHJlcSwgcmVzKSA9PiB7XHJcbiAgY29uc3QgcG9zdE5hbWUgPSByZXEucGFyYW1zLm5hbWU7IC8vcG9zdE5hbWUgZ2V0cyBuYW1lIGZyb20gdXJsIHBhcmFtdGVyc1xyXG4gIENvbW1lbnQuZmluZE9uZSh7bmFtZTogcG9zdE5hbWV9KSAvL2NoYW5nZSB0byBQb3N0XHJcbiAgLnRoZW4oY29tbWVudHMgPT4gcmVzLmpzb24oY29tbWVudHMpKVxyXG4gIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyg0MDApLmpzb24oJ0Vycm9yICcgKyBlcnIpKVxyXG59KVxyXG5cclxuXHJcblxyXG4vL1VQVk9URSBFTkRQT0lOVFxyXG5yb3V0ZXIucm91dGUoJy86bmFtZS91cHZvdGVzJykucG9zdCgocmVxLCByZXMpID0+IHtcclxuICBjb25zdCBwb3N0TmFtZSA9IHJlcS5wYXJhbXMubmFtZTtcclxufSlcclxuXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "comments.js"
      ],
      "names": [
        "router",
        "require",
        "Router",
        "Comment",
        "Post",
        "auth",
        "route",
        "get",
        "req",
        "res",
        "postName",
        "params",
        "name",
        "postInfo",
        "comments",
        "find",
        "status",
        "json",
        "error",
        "then",
        "catch",
        "err",
        "post",
        "username",
        "votes",
        "comment",
        "body",
        "postId",
        "id",
        "saveCommentToPost",
        "findById",
        "_id",
        "updateOne",
        "concat",
        "send",
        "findOne",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\",
      "sourcesContent": [
        "const router = require('express').Router();\r\nlet Comment = require('../models/comment.model');\r\nlet Post = require('../models/post.model');\r\nconst auth = require('../middleware/auth');\r\n\r\n//GET COMMENTS\r\nrouter.route('/brewery-meetup').get(async (req, res) => {\r\n  try {\r\n//Comment.findOne({name: postName})\r\n\r\n  const postName = req.params.name; //postName gets name from url paramters\r\n  const postInfo = await Post.comments.find()  //matches name url paramter we passed. Mongo returns client object we can use to send queries to the db\r\n  res.status(200).json(postInfo); //instead of send, use json since we are working with json.\r\n} catch (error) {\r\n  res.status(500).json({ 'message': 'Error', error })\r\n}\r\n})\r\n\r\n\r\n//GET ALL POSTS, COMMENTS AND UPVOTES\r\n//SEE EVERY COMMENT (working)\r\nrouter.route('/').get((req, res) => {\r\n  Comment.find()\r\n  .then(comments => res.json(comments))\r\n  .catch(err => res.status(400).json('Error ' + err))\r\n})\r\n\r\n\r\nrouter.route('/brewery-meetup/test').get((req, res) => {\r\n  Comment.find()\r\n  .then(comments => res.json(comments))\r\n  .catch(err => res.status(400).json('Error ' + err))\r\n})\r\n\r\n\r\n\r\n\r\n//UPDATE A POST WITH A COMMENT\r\nrouter.route('/:id/add-comment').post(auth, async (req, res) => {\r\nconst {username, votes, comment } = req.body;\r\ntry {\r\nconst postId = req.params.id; //set the req id to a variable\r\n  const saveCommentToPost = await Post.findById({_id: postId})//.populate(User)//  //.populate(User) later\r\n    const post = await Post.updateOne({ _id : postId }, { //update the id that matches req.params.id (ex: brewery-meetup id)\r\n    '$set': {\r\n      comments: saveCommentToPost.comments.concat({ username, votes, comment })\r\n    },\r\n  })\r\n  res.send(post)\r\n}catch(err){\r\n  res.status(400).send(err);\r\n}\r\n})\r\n\r\n\r\n\r\nrouter.route('/:name/upvotes').post((req, res) => {\r\n  const postName = req.params.name; //postName gets name from url paramters\r\n  Comment.findOne({name: postName}) //change to Post\r\n  .then(comments => res.json(comments))\r\n  .catch(err => res.status(400).json('Error ' + err))\r\n})\r\n\r\n\r\n\r\n//UPVOTE ENDPOINT\r\nrouter.route('/:name/upvotes').post((req, res) => {\r\n  const postName = req.params.name;\r\n})\r\n\r\n\r\nmodule.exports = router;\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1606926055589
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\",\"filename\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\\\\routes\\\\breweries.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\cchewning\\Documents\\react-four\\backend",
      "filename": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\breweries.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\cchewning\\Documents\\react-four\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\breweries.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\breweries.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\",
        "sourceFileName": "breweries.js"
      }
    },
    "ast": null,
    "code": "const router = require('express').Router();\n\nlet Breweries = require('../models/brewery.model');\n\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJyZXdlcmllcy5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJyZXF1aXJlIiwiUm91dGVyIiwiQnJld2VyaWVzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsTUFBTSxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUFQLENBQW1CQyxNQUFuQixFQUFmOztBQUNBLElBQUlDLFNBQVMsR0FBR0YsT0FBTyxDQUFDLHlCQUFELENBQXZCOztBQUlBRyxNQUFNLENBQUNDLE9BQVAsR0FBaUJMLE1BQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcY2NoZXduaW5nXFxEb2N1bWVudHNcXHJlYWN0LWZvdXJcXGJhY2tlbmRcXHJvdXRlc1xcIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgcm91dGVyID0gcmVxdWlyZSgnZXhwcmVzcycpLlJvdXRlcigpO1xyXG5sZXQgQnJld2VyaWVzID0gcmVxdWlyZSgnLi4vbW9kZWxzL2JyZXdlcnkubW9kZWwnKTtcclxuXHJcblxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "breweries.js"
      ],
      "names": [
        "router",
        "require",
        "Router",
        "Breweries",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAP,CAAmBC,MAAnB,EAAf;;AACA,IAAIC,SAAS,GAAGF,OAAO,CAAC,yBAAD,CAAvB;;AAIAG,MAAM,CAACC,OAAP,GAAiBL,MAAjB",
      "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\",
      "sourcesContent": [
        "const router = require('express').Router();\r\nlet Breweries = require('../models/brewery.model');\r\n\r\n\r\n\r\nmodule.exports = router;\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1603915281370
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\",\"filename\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\\\\models\\\\user.model.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\cchewning\\Documents\\react-four\\backend",
      "filename": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\user.model.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\cchewning\\Documents\\react-four\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\user.model.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\user.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\",
        "sourceFileName": "user.model.js"
      }
    },
    "ast": null,
    "code": "const mongoose = require('mongoose');\n\nvar uniqueValidator = require('mongoose-unique-validator');\n\nconst Schema = mongoose.Schema;\n\nconst bcrypt = require(\"bcryptjs\");\n\nconst userSchema = new Schema({\n  username: {\n    type: String,\n    required: true,\n    unique: true,\n    trim: true,\n    minlength: 3,\n    maxlength: 15\n  },\n  email: {\n    type: String,\n    unique: true,\n    required: true,\n    trim: true\n  },\n  password: {\n    type: String,\n    required: true,\n    minlength: 8,\n    validate: /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9]).{8,1024}$/,\n    bcrypt: true\n  },\n  passwordConfirm: {\n    type: String,\n    required: true,\n    minlength: 8,\n    validate: /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9]).{8,1024}$/,\n    bcrypt: true\n  },\n  image: {\n    data: Buffer,\n    type: String,\n    required: true\n  },\n  register_date: {\n    type: Date,\n    default: Date.now\n  },\n  modified_date: {\n    type: String\n  }\n}); //Custom error msg for 11000\n\nuserSchema.plugin(uniqueValidator, {\n  message: 'Error, expected {PATH} to be unique.'\n});\nconst User = mongoose.model('User', userSchema); //arg 1 could be anything\n\nmodule.exports = User;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIubW9kZWwuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwidW5pcXVlVmFsaWRhdG9yIiwiU2NoZW1hIiwiYmNyeXB0IiwidXNlclNjaGVtYSIsInVzZXJuYW1lIiwidHlwZSIsIlN0cmluZyIsInJlcXVpcmVkIiwidW5pcXVlIiwidHJpbSIsIm1pbmxlbmd0aCIsIm1heGxlbmd0aCIsImVtYWlsIiwicGFzc3dvcmQiLCJ2YWxpZGF0ZSIsInBhc3N3b3JkQ29uZmlybSIsImltYWdlIiwiZGF0YSIsIkJ1ZmZlciIsInJlZ2lzdGVyX2RhdGUiLCJEYXRlIiwiZGVmYXVsdCIsIm5vdyIsIm1vZGlmaWVkX2RhdGUiLCJwbHVnaW4iLCJtZXNzYWdlIiwiVXNlciIsIm1vZGVsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUF4Qjs7QUFDQSxJQUFJQyxlQUFlLEdBQUdELE9BQU8sQ0FBQywyQkFBRCxDQUE3Qjs7QUFDQSxNQUFNRSxNQUFNLEdBQUdILFFBQVEsQ0FBQ0csTUFBeEI7O0FBQ0EsTUFBTUMsTUFBTSxHQUFHSCxPQUFPLENBQUMsVUFBRCxDQUF0Qjs7QUFFQSxNQUFNSSxVQUFVLEdBQUcsSUFBSUYsTUFBSixDQUFXO0FBQzVCRyxFQUFBQSxRQUFRLEVBQUU7QUFDUkMsSUFBQUEsSUFBSSxFQUFFQyxNQURFO0FBRVJDLElBQUFBLFFBQVEsRUFBRSxJQUZGO0FBR1JDLElBQUFBLE1BQU0sRUFBRSxJQUhBO0FBSVJDLElBQUFBLElBQUksRUFBRSxJQUpFO0FBS1JDLElBQUFBLFNBQVMsRUFBRSxDQUxIO0FBTVJDLElBQUFBLFNBQVMsRUFBRTtBQU5ILEdBRGtCO0FBUzVCQyxFQUFBQSxLQUFLLEVBQUU7QUFDSFAsSUFBQUEsSUFBSSxFQUFFQyxNQURIO0FBRUhFLElBQUFBLE1BQU0sRUFBRSxJQUZMO0FBR0hELElBQUFBLFFBQVEsRUFBRSxJQUhQO0FBSUhFLElBQUFBLElBQUksRUFBRTtBQUpILEdBVHFCO0FBZTVCSSxFQUFBQSxRQUFRLEVBQUU7QUFDUlIsSUFBQUEsSUFBSSxFQUFFQyxNQURFO0FBRVJDLElBQUFBLFFBQVEsRUFBRSxJQUZGO0FBR1JHLElBQUFBLFNBQVMsRUFBRSxDQUhIO0FBSVJJLElBQUFBLFFBQVEsRUFBRSw2REFKRjtBQUtSWixJQUFBQSxNQUFNLEVBQUU7QUFMQSxHQWZrQjtBQXNCNUJhLEVBQUFBLGVBQWUsRUFBRTtBQUNmVixJQUFBQSxJQUFJLEVBQUVDLE1BRFM7QUFFZkMsSUFBQUEsUUFBUSxFQUFFLElBRks7QUFHZkcsSUFBQUEsU0FBUyxFQUFFLENBSEk7QUFJZkksSUFBQUEsUUFBUSxFQUFFLDZEQUpLO0FBS2ZaLElBQUFBLE1BQU0sRUFBRTtBQUxPLEdBdEJXO0FBNkI1QmMsRUFBQUEsS0FBSyxFQUFFO0FBQ0xDLElBQUFBLElBQUksRUFBRUMsTUFERDtBQUVMYixJQUFBQSxJQUFJLEVBQUVDLE1BRkQ7QUFHTEMsSUFBQUEsUUFBUSxFQUFFO0FBSEwsR0E3QnFCO0FBa0M1QlksRUFBQUEsYUFBYSxFQUFFO0FBQ2JkLElBQUFBLElBQUksRUFBRWUsSUFETztBQUViQyxJQUFBQSxPQUFPLEVBQUVELElBQUksQ0FBQ0U7QUFGRCxHQWxDYTtBQXNDN0JDLEVBQUFBLGFBQWEsRUFBRTtBQUNibEIsSUFBQUEsSUFBSSxFQUFFQztBQURPO0FBdENjLENBQVgsQ0FBbkIsQyxDQTZDQTs7QUFDQUgsVUFBVSxDQUFDcUIsTUFBWCxDQUFrQnhCLGVBQWxCLEVBQW1DO0FBQUV5QixFQUFBQSxPQUFPLEVBQUU7QUFBWCxDQUFuQztBQUlBLE1BQU1DLElBQUksR0FBRzVCLFFBQVEsQ0FBQzZCLEtBQVQsQ0FBZSxNQUFmLEVBQXVCeEIsVUFBdkIsQ0FBYixDLENBQWlEOztBQUVqRHlCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkgsSUFBakIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxjY2hld25pbmdcXERvY3VtZW50c1xccmVhY3QtZm91clxcYmFja2VuZFxcbW9kZWxzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XHJcbnZhciB1bmlxdWVWYWxpZGF0b3IgPSByZXF1aXJlKCdtb25nb29zZS11bmlxdWUtdmFsaWRhdG9yJyk7XHJcbmNvbnN0IFNjaGVtYSA9IG1vbmdvb3NlLlNjaGVtYTtcclxuY29uc3QgYmNyeXB0ID0gcmVxdWlyZShcImJjcnlwdGpzXCIpO1xyXG5cclxuY29uc3QgdXNlclNjaGVtYSA9IG5ldyBTY2hlbWEoe1xyXG4gIHVzZXJuYW1lOiB7XHJcbiAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICByZXF1aXJlZDogdHJ1ZSxcclxuICAgIHVuaXF1ZTogdHJ1ZSxcclxuICAgIHRyaW06IHRydWUsXHJcbiAgICBtaW5sZW5ndGg6IDMsXHJcbiAgICBtYXhsZW5ndGg6IDE1XHJcbiAgfSxcclxuICBlbWFpbDoge1xyXG4gICAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICAgIHVuaXF1ZTogdHJ1ZSxcclxuICAgICAgcmVxdWlyZWQ6IHRydWUsXHJcbiAgICAgIHRyaW06IHRydWVcclxuICAgIH0sXHJcbiAgcGFzc3dvcmQ6IHtcclxuICAgIHR5cGU6IFN0cmluZyxcclxuICAgIHJlcXVpcmVkOiB0cnVlLFxyXG4gICAgbWlubGVuZ3RoOiA4LFxyXG4gICAgdmFsaWRhdGU6IC9eKD89LipcXGQpKD89LipbYS16XSkoPz0uKltBLVpdKSg/PS4qW15hLXpBLVowLTldKS57OCwxMDI0fSQvLFxyXG4gICAgYmNyeXB0OiB0cnVlXHJcbiAgfSxcclxuICBwYXNzd29yZENvbmZpcm06IHtcclxuICAgIHR5cGU6IFN0cmluZyxcclxuICAgIHJlcXVpcmVkOiB0cnVlLFxyXG4gICAgbWlubGVuZ3RoOiA4LFxyXG4gICAgdmFsaWRhdGU6IC9eKD89LipcXGQpKD89LipbYS16XSkoPz0uKltBLVpdKSg/PS4qW15hLXpBLVowLTldKS57OCwxMDI0fSQvLFxyXG4gICAgYmNyeXB0OiB0cnVlXHJcbiAgfSxcclxuICBpbWFnZToge1xyXG4gICAgZGF0YTogQnVmZmVyLFxyXG4gICAgdHlwZTogU3RyaW5nLFxyXG4gICAgcmVxdWlyZWQ6IHRydWVcclxuICB9LFxyXG4gIHJlZ2lzdGVyX2RhdGU6IHtcclxuICAgIHR5cGU6IERhdGUsXHJcbiAgICBkZWZhdWx0OiBEYXRlLm5vd1xyXG4gIH0sXHJcbiBtb2RpZmllZF9kYXRlOiB7XHJcbiAgIHR5cGU6IFN0cmluZ1xyXG4gfVxyXG59KTtcclxuXHJcblxyXG5cclxuLy9DdXN0b20gZXJyb3IgbXNnIGZvciAxMTAwMFxyXG51c2VyU2NoZW1hLnBsdWdpbih1bmlxdWVWYWxpZGF0b3IsIHsgbWVzc2FnZTogJ0Vycm9yLCBleHBlY3RlZCB7UEFUSH0gdG8gYmUgdW5pcXVlLicgfSk7XHJcblxyXG5cclxuXHJcbmNvbnN0IFVzZXIgPSBtb25nb29zZS5tb2RlbCgnVXNlcicsIHVzZXJTY2hlbWEpOyAvL2FyZyAxIGNvdWxkIGJlIGFueXRoaW5nXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IFVzZXI7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "user.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "uniqueValidator",
        "Schema",
        "bcrypt",
        "userSchema",
        "username",
        "type",
        "String",
        "required",
        "unique",
        "trim",
        "minlength",
        "maxlength",
        "email",
        "password",
        "validate",
        "passwordConfirm",
        "image",
        "data",
        "Buffer",
        "register_date",
        "Date",
        "default",
        "now",
        "modified_date",
        "plugin",
        "message",
        "User",
        "model",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAIC,eAAe,GAAGD,OAAO,CAAC,2BAAD,CAA7B;;AACA,MAAME,MAAM,GAAGH,QAAQ,CAACG,MAAxB;;AACA,MAAMC,MAAM,GAAGH,OAAO,CAAC,UAAD,CAAtB;;AAEA,MAAMI,UAAU,GAAG,IAAIF,MAAJ,CAAW;AAC5BG,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAEC,MADE;AAERC,IAAAA,QAAQ,EAAE,IAFF;AAGRC,IAAAA,MAAM,EAAE,IAHA;AAIRC,IAAAA,IAAI,EAAE,IAJE;AAKRC,IAAAA,SAAS,EAAE,CALH;AAMRC,IAAAA,SAAS,EAAE;AANH,GADkB;AAS5BC,EAAAA,KAAK,EAAE;AACHP,IAAAA,IAAI,EAAEC,MADH;AAEHE,IAAAA,MAAM,EAAE,IAFL;AAGHD,IAAAA,QAAQ,EAAE,IAHP;AAIHE,IAAAA,IAAI,EAAE;AAJH,GATqB;AAe5BI,EAAAA,QAAQ,EAAE;AACRR,IAAAA,IAAI,EAAEC,MADE;AAERC,IAAAA,QAAQ,EAAE,IAFF;AAGRG,IAAAA,SAAS,EAAE,CAHH;AAIRI,IAAAA,QAAQ,EAAE,6DAJF;AAKRZ,IAAAA,MAAM,EAAE;AALA,GAfkB;AAsB5Ba,EAAAA,eAAe,EAAE;AACfV,IAAAA,IAAI,EAAEC,MADS;AAEfC,IAAAA,QAAQ,EAAE,IAFK;AAGfG,IAAAA,SAAS,EAAE,CAHI;AAIfI,IAAAA,QAAQ,EAAE,6DAJK;AAKfZ,IAAAA,MAAM,EAAE;AALO,GAtBW;AA6B5Bc,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAEC,MADD;AAELb,IAAAA,IAAI,EAAEC,MAFD;AAGLC,IAAAA,QAAQ,EAAE;AAHL,GA7BqB;AAkC5BY,EAAAA,aAAa,EAAE;AACbd,IAAAA,IAAI,EAAEe,IADO;AAEbC,IAAAA,OAAO,EAAED,IAAI,CAACE;AAFD,GAlCa;AAsC7BC,EAAAA,aAAa,EAAE;AACblB,IAAAA,IAAI,EAAEC;AADO;AAtCc,CAAX,CAAnB,C,CA6CA;;AACAH,UAAU,CAACqB,MAAX,CAAkBxB,eAAlB,EAAmC;AAAEyB,EAAAA,OAAO,EAAE;AAAX,CAAnC;AAIA,MAAMC,IAAI,GAAG5B,QAAQ,CAAC6B,KAAT,CAAe,MAAf,EAAuBxB,UAAvB,CAAb,C,CAAiD;;AAEjDyB,MAAM,CAACC,OAAP,GAAiBH,IAAjB",
      "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\",
      "sourcesContent": [
        "const mongoose = require('mongoose');\r\nvar uniqueValidator = require('mongoose-unique-validator');\r\nconst Schema = mongoose.Schema;\r\nconst bcrypt = require(\"bcryptjs\");\r\n\r\nconst userSchema = new Schema({\r\n  username: {\r\n    type: String,\r\n    required: true,\r\n    unique: true,\r\n    trim: true,\r\n    minlength: 3,\r\n    maxlength: 15\r\n  },\r\n  email: {\r\n      type: String,\r\n      unique: true,\r\n      required: true,\r\n      trim: true\r\n    },\r\n  password: {\r\n    type: String,\r\n    required: true,\r\n    minlength: 8,\r\n    validate: /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9]).{8,1024}$/,\r\n    bcrypt: true\r\n  },\r\n  passwordConfirm: {\r\n    type: String,\r\n    required: true,\r\n    minlength: 8,\r\n    validate: /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9]).{8,1024}$/,\r\n    bcrypt: true\r\n  },\r\n  image: {\r\n    data: Buffer,\r\n    type: String,\r\n    required: true\r\n  },\r\n  register_date: {\r\n    type: Date,\r\n    default: Date.now\r\n  },\r\n modified_date: {\r\n   type: String\r\n }\r\n});\r\n\r\n\r\n\r\n//Custom error msg for 11000\r\nuserSchema.plugin(uniqueValidator, { message: 'Error, expected {PATH} to be unique.' });\r\n\r\n\r\n\r\nconst User = mongoose.model('User', userSchema); //arg 1 could be anything\r\n\r\nmodule.exports = User;\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1606945125249
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\",\"filename\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\\\\models\\\\comment.model.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\cchewning\\Documents\\react-four\\backend",
      "filename": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\comment.model.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\cchewning\\Documents\\react-four\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\comment.model.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\comment.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\",
        "sourceFileName": "comment.model.js"
      }
    },
    "ast": null,
    "code": "const mongoose = require(\"mongoose\");\n\nconst Schema = mongoose.Schema;\nconst commentSchema = new Schema({\n  username: {\n    type: String,\n    required: true\n  },\n  votes: {\n    type: String //may not need this unless you want to have upvotes and downvotes for comments.\n\n  },\n  comments: {\n    //replies on this comment will go here. you'll need to push into this.\n    type: String,\n    required: true\n  }\n});\nconst Comment = mongoose.model(\"Comment\", commentSchema);\nmodule.exports = Comment;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbW1lbnQubW9kZWwuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwiU2NoZW1hIiwiY29tbWVudFNjaGVtYSIsInVzZXJuYW1lIiwidHlwZSIsIlN0cmluZyIsInJlcXVpcmVkIiwidm90ZXMiLCJjb21tZW50cyIsIkNvbW1lbnQiLCJtb2RlbCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFFBQVEsR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBeEI7O0FBQ0EsTUFBTUMsTUFBTSxHQUFHRixRQUFRLENBQUNFLE1BQXhCO0FBRUEsTUFBTUMsYUFBYSxHQUFHLElBQUlELE1BQUosQ0FBVztBQUMvQkUsRUFBQUEsUUFBUSxFQUFFO0FBQ1JDLElBQUFBLElBQUksRUFBRUMsTUFERTtBQUVSQyxJQUFBQSxRQUFRLEVBQUU7QUFGRixHQURxQjtBQUsvQkMsRUFBQUEsS0FBSyxFQUFFO0FBQ0xILElBQUFBLElBQUksRUFBRUMsTUFERCxDQUNTOztBQURULEdBTHdCO0FBUS9CRyxFQUFBQSxRQUFRLEVBQUU7QUFBRztBQUNYSixJQUFBQSxJQUFJLEVBQUVDLE1BREU7QUFFUkMsSUFBQUEsUUFBUSxFQUFFO0FBRkY7QUFScUIsQ0FBWCxDQUF0QjtBQWNBLE1BQU1HLE9BQU8sR0FBR1YsUUFBUSxDQUFDVyxLQUFULENBQWUsU0FBZixFQUEwQlIsYUFBMUIsQ0FBaEI7QUFFQVMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCSCxPQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGNjaGV3bmluZ1xcRG9jdW1lbnRzXFxyZWFjdC1mb3VyXFxiYWNrZW5kXFxtb2RlbHNcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZShcIm1vbmdvb3NlXCIpO1xyXG5jb25zdCBTY2hlbWEgPSBtb25nb29zZS5TY2hlbWE7XHJcblxyXG5jb25zdCBjb21tZW50U2NoZW1hID0gbmV3IFNjaGVtYSh7XHJcbiAgdXNlcm5hbWU6IHtcclxuICAgIHR5cGU6IFN0cmluZyxcclxuICAgIHJlcXVpcmVkOiB0cnVlLFxyXG4gIH0sXHJcbiAgdm90ZXM6IHtcclxuICAgIHR5cGU6IFN0cmluZywgLy9tYXkgbm90IG5lZWQgdGhpcyB1bmxlc3MgeW91IHdhbnQgdG8gaGF2ZSB1cHZvdGVzIGFuZCBkb3dudm90ZXMgZm9yIGNvbW1lbnRzLlxyXG4gIH0sXHJcbiAgY29tbWVudHM6IHsgIC8vcmVwbGllcyBvbiB0aGlzIGNvbW1lbnQgd2lsbCBnbyBoZXJlLiB5b3UnbGwgbmVlZCB0byBwdXNoIGludG8gdGhpcy5cclxuICAgIHR5cGU6IFN0cmluZyxcclxuICAgIHJlcXVpcmVkOiB0cnVlLFxyXG4gIH1cclxufSk7XHJcblxyXG5jb25zdCBDb21tZW50ID0gbW9uZ29vc2UubW9kZWwoXCJDb21tZW50XCIsIGNvbW1lbnRTY2hlbWEpO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBDb21tZW50O1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "comment.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "commentSchema",
        "username",
        "type",
        "String",
        "required",
        "votes",
        "comments",
        "Comment",
        "model",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAEA,MAAMC,aAAa,GAAG,IAAID,MAAJ,CAAW;AAC/BE,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAEC,MADE;AAERC,IAAAA,QAAQ,EAAE;AAFF,GADqB;AAK/BC,EAAAA,KAAK,EAAE;AACLH,IAAAA,IAAI,EAAEC,MADD,CACS;;AADT,GALwB;AAQ/BG,EAAAA,QAAQ,EAAE;AAAG;AACXJ,IAAAA,IAAI,EAAEC,MADE;AAERC,IAAAA,QAAQ,EAAE;AAFF;AARqB,CAAX,CAAtB;AAcA,MAAMG,OAAO,GAAGV,QAAQ,CAACW,KAAT,CAAe,SAAf,EAA0BR,aAA1B,CAAhB;AAEAS,MAAM,CAACC,OAAP,GAAiBH,OAAjB",
      "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\",
      "sourcesContent": [
        "const mongoose = require(\"mongoose\");\r\nconst Schema = mongoose.Schema;\r\n\r\nconst commentSchema = new Schema({\r\n  username: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  votes: {\r\n    type: String, //may not need this unless you want to have upvotes and downvotes for comments.\r\n  },\r\n  comments: {  //replies on this comment will go here. you'll need to push into this.\r\n    type: String,\r\n    required: true,\r\n  }\r\n});\r\n\r\nconst Comment = mongoose.model(\"Comment\", commentSchema);\r\n\r\nmodule.exports = Comment;\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1605240613380
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\",\"filename\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\\\\models\\\\brewery.model.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\cchewning\\Documents\\react-four\\backend",
      "filename": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\brewery.model.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\cchewning\\Documents\\react-four\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\brewery.model.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\brewery.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\",
        "sourceFileName": "brewery.model.js"
      }
    },
    "ast": null,
    "code": "const mongoose = require('mongoose');\n\nconst Schema = mongoose.Schema;\nconst brewerySchema = new Schema({\n  name: {\n    type: String\n  },\n  beers: {\n    type: String\n  },\n  image: {\n    data: Buffer,\n    type: String\n  },\n  location: {\n    type: String\n  },\n  website: {\n    type: String\n  },\n  hours: {\n    type: String\n  },\n  content: {\n    type: String\n  }\n});\nconst Brewery = mongoose.model('Brewery', brewerySchema); //arg 1 could be anything\n\nmodule.exports = Brewery;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJyZXdlcnkubW9kZWwuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwiU2NoZW1hIiwiYnJld2VyeVNjaGVtYSIsIm5hbWUiLCJ0eXBlIiwiU3RyaW5nIiwiYmVlcnMiLCJpbWFnZSIsImRhdGEiLCJCdWZmZXIiLCJsb2NhdGlvbiIsIndlYnNpdGUiLCJob3VycyIsImNvbnRlbnQiLCJCcmV3ZXJ5IiwibW9kZWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXhCOztBQUNBLE1BQU1DLE1BQU0sR0FBR0YsUUFBUSxDQUFDRSxNQUF4QjtBQUVBLE1BQU1DLGFBQWEsR0FBRyxJQUFJRCxNQUFKLENBQVc7QUFDL0JFLEVBQUFBLElBQUksRUFBRTtBQUFFQyxJQUFBQSxJQUFJLEVBQUVDO0FBQVIsR0FEeUI7QUFFL0JDLEVBQUFBLEtBQUssRUFBRTtBQUFFRixJQUFBQSxJQUFJLEVBQUVDO0FBQVIsR0FGd0I7QUFHL0JFLEVBQUFBLEtBQUssRUFBRTtBQUFFQyxJQUFBQSxJQUFJLEVBQUVDLE1BQVI7QUFBZ0JMLElBQUFBLElBQUksRUFBRUM7QUFBdEIsR0FId0I7QUFJL0JLLEVBQUFBLFFBQVEsRUFBRTtBQUFDTixJQUFBQSxJQUFJLEVBQUVDO0FBQVAsR0FKcUI7QUFLL0JNLEVBQUFBLE9BQU8sRUFBRTtBQUFDUCxJQUFBQSxJQUFJLEVBQUVDO0FBQVAsR0FMc0I7QUFNL0JPLEVBQUFBLEtBQUssRUFBRTtBQUFDUixJQUFBQSxJQUFJLEVBQUVDO0FBQVAsR0FOd0I7QUFPL0JRLEVBQUFBLE9BQU8sRUFBRTtBQUFDVCxJQUFBQSxJQUFJLEVBQUVDO0FBQVA7QUFQc0IsQ0FBWCxDQUF0QjtBQVVBLE1BQU1TLE9BQU8sR0FBR2YsUUFBUSxDQUFDZ0IsS0FBVCxDQUFlLFNBQWYsRUFBMEJiLGFBQTFCLENBQWhCLEMsQ0FBMEQ7O0FBRTFEYyxNQUFNLENBQUNDLE9BQVAsR0FBaUJILE9BQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcY2NoZXduaW5nXFxEb2N1bWVudHNcXHJlYWN0LWZvdXJcXGJhY2tlbmRcXG1vZGVsc1xcIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpO1xyXG5jb25zdCBTY2hlbWEgPSBtb25nb29zZS5TY2hlbWE7XHJcblxyXG5jb25zdCBicmV3ZXJ5U2NoZW1hID0gbmV3IFNjaGVtYSh7XHJcbiAgbmFtZTogeyB0eXBlOiBTdHJpbmcgfSxcclxuICBiZWVyczogeyB0eXBlOiBTdHJpbmcgfSxcclxuICBpbWFnZTogeyBkYXRhOiBCdWZmZXIsIHR5cGU6IFN0cmluZyB9LFxyXG4gIGxvY2F0aW9uOiB7dHlwZTogU3RyaW5nfSxcclxuICB3ZWJzaXRlOiB7dHlwZTogU3RyaW5nfSxcclxuICBob3Vyczoge3R5cGU6IFN0cmluZ30sXHJcbiAgY29udGVudDoge3R5cGU6IFN0cmluZ30sXHJcbn0pXHJcblxyXG5jb25zdCBCcmV3ZXJ5ID0gbW9uZ29vc2UubW9kZWwoJ0JyZXdlcnknLCBicmV3ZXJ5U2NoZW1hKTsgLy9hcmcgMSBjb3VsZCBiZSBhbnl0aGluZ1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBCcmV3ZXJ5O1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "brewery.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "brewerySchema",
        "name",
        "type",
        "String",
        "beers",
        "image",
        "data",
        "Buffer",
        "location",
        "website",
        "hours",
        "content",
        "Brewery",
        "model",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAEA,MAAMC,aAAa,GAAG,IAAID,MAAJ,CAAW;AAC/BE,EAAAA,IAAI,EAAE;AAAEC,IAAAA,IAAI,EAAEC;AAAR,GADyB;AAE/BC,EAAAA,KAAK,EAAE;AAAEF,IAAAA,IAAI,EAAEC;AAAR,GAFwB;AAG/BE,EAAAA,KAAK,EAAE;AAAEC,IAAAA,IAAI,EAAEC,MAAR;AAAgBL,IAAAA,IAAI,EAAEC;AAAtB,GAHwB;AAI/BK,EAAAA,QAAQ,EAAE;AAACN,IAAAA,IAAI,EAAEC;AAAP,GAJqB;AAK/BM,EAAAA,OAAO,EAAE;AAACP,IAAAA,IAAI,EAAEC;AAAP,GALsB;AAM/BO,EAAAA,KAAK,EAAE;AAACR,IAAAA,IAAI,EAAEC;AAAP,GANwB;AAO/BQ,EAAAA,OAAO,EAAE;AAACT,IAAAA,IAAI,EAAEC;AAAP;AAPsB,CAAX,CAAtB;AAUA,MAAMS,OAAO,GAAGf,QAAQ,CAACgB,KAAT,CAAe,SAAf,EAA0Bb,aAA1B,CAAhB,C,CAA0D;;AAE1Dc,MAAM,CAACC,OAAP,GAAiBH,OAAjB",
      "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\",
      "sourcesContent": [
        "const mongoose = require('mongoose');\r\nconst Schema = mongoose.Schema;\r\n\r\nconst brewerySchema = new Schema({\r\n  name: { type: String },\r\n  beers: { type: String },\r\n  image: { data: Buffer, type: String },\r\n  location: {type: String},\r\n  website: {type: String},\r\n  hours: {type: String},\r\n  content: {type: String},\r\n})\r\n\r\nconst Brewery = mongoose.model('Brewery', brewerySchema); //arg 1 could be anything\r\n\r\nmodule.exports = Brewery;\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1603915204629
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\",\"filename\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\\\\routes\\\\posts.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\cchewning\\Documents\\react-four\\backend",
      "filename": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\posts.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\cchewning\\Documents\\react-four\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\posts.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\posts.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\",
        "sourceFileName": "posts.js"
      }
    },
    "ast": null,
    "code": "const router = require('express').Router();\n\nlet Post = require('../models/post.model'); ///api/community/posts\n//GET ALL POSTS\n\n\nrouter.route('').get((req, res) => {\n  Post.find().then(posts => res.json(posts)).catch(err => res.status(400).json('Error ' + err));\n}); //GET COMMENTS PER POST\n\nrouter.route('posts/:id').get((req, res) => {\n  Post.findById(req.params.id).then(posts => res.json(posts)).catch(err => res.status(400).json('Error ' + err));\n}); //ADD POST\n\nrouter.route('/add-post').post((req, res) => {\n  //Set variables\n  const username = req.body.username;\n  const name = req.body.name; //how to get logged in username?  //destructure to const { name, comment } = req.body;  ?\n\n  const content = req.body.content;\n  const votes = 0;\n  const newPost = new Post({\n    username,\n    name,\n    content,\n    votes\n  });\n  newPost.save().then(() => res.json('Post added')).catch(err => res.status(400).json('Error' + err));\n}); //UPDATE POST\n\nrouter.route('/update/:id').post((req, res) => {\n  Post.findById(req.params.id).then(post => {\n    post.votes = req.body.votes;\n    post.username = req.body.username;\n    post.content = req.body.content;\n    post.save().then(() => res.json('Post updated')).catch(err => res.status(400).json('Error: ' + err));\n  }).catch(err => res.status(400).json('Error: ' + err));\n}); //DELETE POST\n\nrouter.route('/:id').delete((req, res) => {\n  Post.findByIdAndDelete(req.params.id).then(() => res.json('Post deleted.')).catch(err => res.status(400).json('Error: ' + err));\n}); //UPVOTE POST\n\nrouter.route('/:id/upvote').post(async (req, res) => {\n  const postId = req.params.id;\n  const postInfo = await Post.findOne({\n    _id: postId\n  });\n  await Post.updateOne({\n    _id: postId\n  }, {\n    '$set': {\n      votes: postInfo.votes + 1\n    }\n  });\n  const updatedPostInfo = await Post.findOne({\n    _id: postId\n  });\n  res.status(200).json(updatedPostInfo.votes);\n}); //DOWNVOTE POST\n\nrouter.route('/:id/downvote').post(async (req, res) => {\n  const postId = req.params.id;\n  const postInfo = await Post.findOne({\n    _id: postId\n  });\n  await Post.updateOne({\n    _id: postId\n  }, {\n    '$set': {\n      votes: postInfo.votes - 1\n    }\n  });\n  const updatedPostInfo = await Post.findOne({\n    _id: postId\n  });\n  res.status(200).json(updatedPostInfo.votes);\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "posts.js"
      ],
      "names": [
        "router",
        "require",
        "Router",
        "Post",
        "route",
        "get",
        "req",
        "res",
        "find",
        "then",
        "posts",
        "json",
        "catch",
        "err",
        "status",
        "findById",
        "params",
        "id",
        "post",
        "username",
        "body",
        "name",
        "content",
        "votes",
        "newPost",
        "save",
        "delete",
        "findByIdAndDelete",
        "postId",
        "postInfo",
        "findOne",
        "_id",
        "updateOne",
        "updatedPostInfo",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\",
      "sourcesContent": [
        "const router = require('express').Router();\r\nlet Post = require('../models/post.model');\r\n\r\n///api/community/posts\r\n\r\n\r\n//GET ALL POSTS\r\nrouter.route('').get((req, res) => {\r\n  Post.find()\r\n  .then(posts => res.json(posts))\r\n  .catch(err => res.status(400).json('Error ' + err))\r\n})\r\n\r\n//GET COMMENTS PER POST\r\nrouter.route('posts/:id').get((req, res) => {\r\n  Post.findById(req.params.id)\r\n  .then(posts => res.json(posts))\r\n  .catch(err => res.status(400).json('Error ' + err))\r\n})\r\n\r\n//ADD POST\r\nrouter.route('/add-post').post((req, res) => {\r\n  //Set variables\r\n  const username = req.body.username;\r\n  const name = req.body.name; //how to get logged in username?  //destructure to const { name, comment } = req.body;  ?\r\n  const content = req.body.content;\r\n  const votes = 0;\r\n\r\n  const newPost = new Post({\r\n    username,\r\n    name,\r\n    content,\r\n    votes\r\n  });\r\n\r\n  newPost.save()\r\n  .then(() => res.json('Post added'))\r\n  .catch(err => res.status(400).json('Error' + err));\r\n});\r\n\r\n//UPDATE POST\r\nrouter.route('/update/:id').post((req, res) => {\r\n  Post.findById(req.params.id)\r\n  .then(post => {\r\n    post.votes = req.body.votes;\r\n    post.username = req.body.username;\r\n    post.content = req.body.content;\r\n\r\n    post.save()\r\n    .then(() => res.json('Post updated'))\r\n    .catch(err => res.status(400).json('Error: ' + err))\r\n  })\r\n  .catch(err => res.status(400).json('Error: ' + err))\r\n})\r\n\r\n\r\n//DELETE POST\r\nrouter.route('/:id').delete((req, res) => {\r\n  Post.findByIdAndDelete(req.params.id)\r\n  .then(() => res.json('Post deleted.'))\r\n  .catch(err => res.status(400).json('Error: ' + err))\r\n  })\r\n\r\n//UPVOTE POST\r\nrouter.route('/:id/upvote').post(async (req, res) => {\r\n          const postId = req.params.id;\r\n          const postInfo = await Post.findOne({ _id: postId });\r\n          await Post.updateOne({ _id: postId }, {\r\n              '$set': {\r\n                  votes: postInfo.votes + 1,\r\n              },\r\n          });\r\n          const updatedPostInfo = await Post.findOne({ _id: postId });\r\n          res.status(200).json(updatedPostInfo.votes);\r\n      });\r\n\r\n//DOWNVOTE POST\r\nrouter.route('/:id/downvote').post(async (req, res) => {\r\n              const postId = req.params.id;\r\n              const postInfo = await Post.findOne({ _id: postId });\r\n              await Post.updateOne({ _id: postId }, {\r\n                  '$set': {\r\n                      votes: postInfo.votes - 1,\r\n                  },\r\n              });\r\n              const updatedPostInfo = await Post.findOne({ _id: postId });\r\n\r\n              res.status(200).json(updatedPostInfo.votes);\r\n          });\r\n\r\n\r\n\r\n\r\nmodule.exports = router;\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1605732998874
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\",\"filename\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\\\\models\\\\post.model.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\cchewning\\Documents\\react-four\\backend",
      "filename": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\post.model.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\cchewning\\Documents\\react-four\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\post.model.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\post.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\",
        "sourceFileName": "post.model.js"
      }
    },
    "ast": null,
    "code": "const mongoose = require(\"mongoose\");\n\nconst Schema = mongoose.Schema;\nconst postSchema = new Schema({\n  username: {\n    type: String,\n    required: true\n  },\n  name: {\n    type: String,\n    required: true\n  },\n  content: {\n    type: String,\n    required: true\n  },\n  votes: {\n    type: Number,\n    default: 0\n  },\n  comments: {\n    type: Array\n  }\n}, {\n  timestamps: true\n});\nconst Post = mongoose.model(\"Post\", postSchema); //arg 1 could be anything\n\nmodule.exports = Post;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvc3QubW9kZWwuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwiU2NoZW1hIiwicG9zdFNjaGVtYSIsInVzZXJuYW1lIiwidHlwZSIsIlN0cmluZyIsInJlcXVpcmVkIiwibmFtZSIsImNvbnRlbnQiLCJ2b3RlcyIsIk51bWJlciIsImRlZmF1bHQiLCJjb21tZW50cyIsIkFycmF5IiwidGltZXN0YW1wcyIsIlBvc3QiLCJtb2RlbCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFFBQVEsR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBeEI7O0FBQ0EsTUFBTUMsTUFBTSxHQUFHRixRQUFRLENBQUNFLE1BQXhCO0FBRUEsTUFBTUMsVUFBVSxHQUFHLElBQUlELE1BQUosQ0FBVztBQUM1QkUsRUFBQUEsUUFBUSxFQUFFO0FBQ1JDLElBQUFBLElBQUksRUFBRUMsTUFERTtBQUVSQyxJQUFBQSxRQUFRLEVBQUU7QUFGRixHQURrQjtBQUs1QkMsRUFBQUEsSUFBSSxFQUFFO0FBQ0pILElBQUFBLElBQUksRUFBRUMsTUFERjtBQUVKQyxJQUFBQSxRQUFRLEVBQUU7QUFGTixHQUxzQjtBQVM1QkUsRUFBQUEsT0FBTyxFQUFFO0FBQ1BKLElBQUFBLElBQUksRUFBRUMsTUFEQztBQUVQQyxJQUFBQSxRQUFRLEVBQUU7QUFGSCxHQVRtQjtBQWE1QkcsRUFBQUEsS0FBSyxFQUFFO0FBQ0xMLElBQUFBLElBQUksRUFBRU0sTUFERDtBQUVMQyxJQUFBQSxPQUFPLEVBQUU7QUFGSixHQWJxQjtBQWlCNUJDLEVBQUFBLFFBQVEsRUFBRTtBQUNSUixJQUFBQSxJQUFJLEVBQUVTO0FBREU7QUFqQmtCLENBQVgsRUFxQmpCO0FBQ0VDLEVBQUFBLFVBQVUsRUFBRTtBQURkLENBckJpQixDQUFuQjtBQTBCQSxNQUFNQyxJQUFJLEdBQUdoQixRQUFRLENBQUNpQixLQUFULENBQWUsTUFBZixFQUF1QmQsVUFBdkIsQ0FBYixDLENBQWlEOztBQUVqRGUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCSCxJQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGNjaGV3bmluZ1xcRG9jdW1lbnRzXFxyZWFjdC1mb3VyXFxiYWNrZW5kXFxtb2RlbHNcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZShcIm1vbmdvb3NlXCIpO1xyXG5jb25zdCBTY2hlbWEgPSBtb25nb29zZS5TY2hlbWE7XHJcblxyXG5jb25zdCBwb3N0U2NoZW1hID0gbmV3IFNjaGVtYSh7XHJcbiAgdXNlcm5hbWU6IHtcclxuICAgIHR5cGU6IFN0cmluZyxcclxuICAgIHJlcXVpcmVkOiB0cnVlLFxyXG4gIH0sXHJcbiAgbmFtZToge1xyXG4gICAgdHlwZTogU3RyaW5nLFxyXG4gICAgcmVxdWlyZWQ6IHRydWUsXHJcbiAgfSxcclxuICBjb250ZW50OiB7XHJcbiAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICByZXF1aXJlZDogdHJ1ZSxcclxuICB9LFxyXG4gIHZvdGVzOiB7XHJcbiAgICB0eXBlOiBOdW1iZXIsXHJcbiAgICBkZWZhdWx0OiAwLFxyXG4gIH0sXHJcbiAgY29tbWVudHM6IHtcclxuICAgIHR5cGU6IEFycmF5LFxyXG4gIH1cclxufSxcclxuICB7XHJcbiAgICB0aW1lc3RhbXBzOiB0cnVlLFxyXG4gIH1cclxuKTtcclxuXHJcbmNvbnN0IFBvc3QgPSBtb25nb29zZS5tb2RlbChcIlBvc3RcIiwgcG9zdFNjaGVtYSk7IC8vYXJnIDEgY291bGQgYmUgYW55dGhpbmdcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gUG9zdDtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "post.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "postSchema",
        "username",
        "type",
        "String",
        "required",
        "name",
        "content",
        "votes",
        "Number",
        "default",
        "comments",
        "Array",
        "timestamps",
        "Post",
        "model",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAEA,MAAMC,UAAU,GAAG,IAAID,MAAJ,CAAW;AAC5BE,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAEC,MADE;AAERC,IAAAA,QAAQ,EAAE;AAFF,GADkB;AAK5BC,EAAAA,IAAI,EAAE;AACJH,IAAAA,IAAI,EAAEC,MADF;AAEJC,IAAAA,QAAQ,EAAE;AAFN,GALsB;AAS5BE,EAAAA,OAAO,EAAE;AACPJ,IAAAA,IAAI,EAAEC,MADC;AAEPC,IAAAA,QAAQ,EAAE;AAFH,GATmB;AAa5BG,EAAAA,KAAK,EAAE;AACLL,IAAAA,IAAI,EAAEM,MADD;AAELC,IAAAA,OAAO,EAAE;AAFJ,GAbqB;AAiB5BC,EAAAA,QAAQ,EAAE;AACRR,IAAAA,IAAI,EAAES;AADE;AAjBkB,CAAX,EAqBjB;AACEC,EAAAA,UAAU,EAAE;AADd,CArBiB,CAAnB;AA0BA,MAAMC,IAAI,GAAGhB,QAAQ,CAACiB,KAAT,CAAe,MAAf,EAAuBd,UAAvB,CAAb,C,CAAiD;;AAEjDe,MAAM,CAACC,OAAP,GAAiBH,IAAjB",
      "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\models\\",
      "sourcesContent": [
        "const mongoose = require(\"mongoose\");\r\nconst Schema = mongoose.Schema;\r\n\r\nconst postSchema = new Schema({\r\n  username: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  name: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  content: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  votes: {\r\n    type: Number,\r\n    default: 0,\r\n  },\r\n  comments: {\r\n    type: Array,\r\n  }\r\n},\r\n  {\r\n    timestamps: true,\r\n  }\r\n);\r\n\r\nconst Post = mongoose.model(\"Post\", postSchema); //arg 1 could be anything\r\n\r\nmodule.exports = Post;\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1604982453002
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\",\"filename\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\\\\routes\\\\auth.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\cchewning\\Documents\\react-four\\backend",
      "filename": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\auth.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\cchewning\\Documents\\react-four\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\auth.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\",
        "sourceFileName": "auth.js"
      }
    },
    "ast": null,
    "code": "const router = require('express').Router();\n\nrequire('dotenv').config(); //env variables can be in the dotenv file.\n\n\nlet User = require('../models/user.model');\n\nconst Bcrypt = require(\"bcryptjs\");\n\nconst jwt = require(\"jsonwebtoken\");\n\nconst token = process.env.JWT_SECRET; //LOGIN USER\n\nrouter.route('/').post((req, res, user) => {\n  const {\n    username,\n    password\n  } = req.body;\n  const payload = {\n    id: user._id\n  };\n  const options = {\n    expiresIn: 3600\n  };\n  const secret = process.env.JWT_SECRET;\n  const token = jwt.sign(payload, secret, options);\n  console.log(token, ' login token');\n  User.findOne({\n    username\n  }) //VALIDATION CHECKS\n  .then(user => {\n    //validate user\n    if (!user) return res.status(400).json({\n      msg: 'User does not exist'\n    }); //validate pw\n\n    Bcrypt.compare(password, user.password) //plain txt pw vs. hashed pw\n    .then(isMatch => {\n      if (!isMatch) return res.status(400).json({\n        msg: 'Invalid credentials'\n      });\n      console.log(password, ' pw');\n      console.log(user.password, ' user pw');\n      res.json({\n        success: true,\n        message: \"here's your token\",\n        token: token,\n        user: user\n      });\n      console.log(password, ' pw');\n      console.log(user.password, ' user pw');\n    }).catch(err => {\n      console.log(err);\n    });\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGguanMiXSwibmFtZXMiOlsicm91dGVyIiwicmVxdWlyZSIsIlJvdXRlciIsImNvbmZpZyIsIlVzZXIiLCJCY3J5cHQiLCJqd3QiLCJ0b2tlbiIsInByb2Nlc3MiLCJlbnYiLCJKV1RfU0VDUkVUIiwicm91dGUiLCJwb3N0IiwicmVxIiwicmVzIiwidXNlciIsInVzZXJuYW1lIiwicGFzc3dvcmQiLCJib2R5IiwicGF5bG9hZCIsImlkIiwiX2lkIiwib3B0aW9ucyIsImV4cGlyZXNJbiIsInNlY3JldCIsInNpZ24iLCJjb25zb2xlIiwibG9nIiwiZmluZE9uZSIsInRoZW4iLCJzdGF0dXMiLCJqc29uIiwibXNnIiwiY29tcGFyZSIsImlzTWF0Y2giLCJzdWNjZXNzIiwibWVzc2FnZSIsImNhdGNoIiwiZXJyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsTUFBTSxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUFQLENBQW1CQyxNQUFuQixFQUFmOztBQUNBRCxPQUFPLENBQUMsUUFBRCxDQUFQLENBQWtCRSxNQUFsQixHLENBQTRCOzs7QUFDNUIsSUFBSUMsSUFBSSxHQUFHSCxPQUFPLENBQUMsc0JBQUQsQ0FBbEI7O0FBQ0EsTUFBTUksTUFBTSxHQUFHSixPQUFPLENBQUMsVUFBRCxDQUF0Qjs7QUFDQSxNQUFNSyxHQUFHLEdBQUdMLE9BQU8sQ0FBQyxjQUFELENBQW5COztBQUNBLE1BQU1NLEtBQUssR0FBR0MsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFVBQTFCLEMsQ0FHQTs7QUFDQVYsTUFBTSxDQUFDVyxLQUFQLENBQWEsR0FBYixFQUFrQkMsSUFBbEIsQ0FBdUIsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsS0FBb0I7QUFDekMsUUFBTTtBQUFDQyxJQUFBQSxRQUFEO0FBQVdDLElBQUFBO0FBQVgsTUFBdUJKLEdBQUcsQ0FBQ0ssSUFBakM7QUFDQSxRQUFNQyxPQUFPLEdBQUc7QUFBRUMsSUFBQUEsRUFBRSxFQUFFTCxJQUFJLENBQUNNO0FBQVgsR0FBaEI7QUFDQSxRQUFNQyxPQUFPLEdBQUc7QUFBQ0MsSUFBQUEsU0FBUyxFQUFFO0FBQVosR0FBaEI7QUFDQSxRQUFNQyxNQUFNLEdBQUdoQixPQUFPLENBQUNDLEdBQVIsQ0FBWUMsVUFBM0I7QUFDQSxRQUFNSCxLQUFLLEdBQUdELEdBQUcsQ0FBQ21CLElBQUosQ0FBU04sT0FBVCxFQUFrQkssTUFBbEIsRUFBMEJGLE9BQTFCLENBQWQ7QUFDQUksRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlwQixLQUFaLEVBQW1CLGNBQW5CO0FBRUFILEVBQUFBLElBQUksQ0FBQ3dCLE9BQUwsQ0FBYTtBQUFFWixJQUFBQTtBQUFGLEdBQWIsRUFDQTtBQURBLEdBRUNhLElBRkQsQ0FFTWQsSUFBSSxJQUFJO0FBQ1o7QUFDQSxRQUFHLENBQUNBLElBQUosRUFBVSxPQUFPRCxHQUFHLENBQUNnQixNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFBRUMsTUFBQUEsR0FBRyxFQUFFO0FBQVAsS0FBckIsQ0FBUCxDQUZFLENBSVo7O0FBQ0EzQixJQUFBQSxNQUFNLENBQUM0QixPQUFQLENBQWVoQixRQUFmLEVBQXlCRixJQUFJLENBQUNFLFFBQTlCLEVBQTBDO0FBQTFDLEtBQ0NZLElBREQsQ0FDTUssT0FBTyxJQUFJO0FBQ2hCLFVBQUcsQ0FBQ0EsT0FBSixFQUFhLE9BQU9wQixHQUFHLENBQUNnQixNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFBQ0MsUUFBQUEsR0FBRyxFQUFFO0FBQU4sT0FBckIsQ0FBUDtBQUNiTixNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWVYsUUFBWixFQUFzQixLQUF0QjtBQUNBUyxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWVosSUFBSSxDQUFDRSxRQUFqQixFQUEyQixVQUEzQjtBQUNISCxNQUFBQSxHQUFHLENBQUNpQixJQUFKLENBQVM7QUFBQ0ksUUFBQUEsT0FBTyxFQUFFLElBQVY7QUFBZ0JDLFFBQUFBLE9BQU8sRUFBRSxtQkFBekI7QUFBOEM3QixRQUFBQSxLQUFLLEVBQUVBLEtBQXJEO0FBQTREUSxRQUFBQSxJQUFJLEVBQUVBO0FBQWxFLE9BQVQ7QUFFQVcsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlWLFFBQVosRUFBc0IsS0FBdEI7QUFDQVMsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlaLElBQUksQ0FBQ0UsUUFBakIsRUFBMkIsVUFBM0I7QUFDRCxLQVRHLEVBVUhvQixLQVZHLENBVUdDLEdBQUcsSUFBSTtBQUNaWixNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWVcsR0FBWjtBQUNELEtBWkc7QUFhRCxHQXBCRDtBQXFCRCxDQTdCRDtBQWlDQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCeEMsTUFBakIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxjY2hld25pbmdcXERvY3VtZW50c1xccmVhY3QtZm91clxcYmFja2VuZFxccm91dGVzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCByb3V0ZXIgPSByZXF1aXJlKCdleHByZXNzJykuUm91dGVyKCk7XHJcbnJlcXVpcmUoJ2RvdGVudicpLmNvbmZpZygpOyAvL2VudiB2YXJpYWJsZXMgY2FuIGJlIGluIHRoZSBkb3RlbnYgZmlsZS5cclxubGV0IFVzZXIgPSByZXF1aXJlKCcuLi9tb2RlbHMvdXNlci5tb2RlbCcpO1xyXG5jb25zdCBCY3J5cHQgPSByZXF1aXJlKFwiYmNyeXB0anNcIik7XHJcbmNvbnN0IGp3dCA9IHJlcXVpcmUoXCJqc29ud2VidG9rZW5cIik7XHJcbmNvbnN0IHRva2VuID0gcHJvY2Vzcy5lbnYuSldUX1NFQ1JFVDtcclxuXHJcblxyXG4vL0xPR0lOIFVTRVJcclxucm91dGVyLnJvdXRlKCcvJykucG9zdCgocmVxLCByZXMsIHVzZXIpID0+IHtcclxuICBjb25zdCB7dXNlcm5hbWUsIHBhc3N3b3JkfSA9IHJlcS5ib2R5O1xyXG4gIGNvbnN0IHBheWxvYWQgPSB7IGlkOiB1c2VyLl9pZCB9O1xyXG4gIGNvbnN0IG9wdGlvbnMgPSB7ZXhwaXJlc0luOiAzNjAwfTtcclxuICBjb25zdCBzZWNyZXQgPSBwcm9jZXNzLmVudi5KV1RfU0VDUkVUO1xyXG4gIGNvbnN0IHRva2VuID0gand0LnNpZ24ocGF5bG9hZCwgc2VjcmV0LCBvcHRpb25zKTtcclxuICBjb25zb2xlLmxvZyh0b2tlbiwgJyBsb2dpbiB0b2tlbicpXHJcblxyXG4gIFVzZXIuZmluZE9uZSh7IHVzZXJuYW1lIH0pXHJcbiAgLy9WQUxJREFUSU9OIENIRUNLU1xyXG4gIC50aGVuKHVzZXIgPT4ge1xyXG4gICAgLy92YWxpZGF0ZSB1c2VyXHJcbiAgICBpZighdXNlcikgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgbXNnOiAnVXNlciBkb2VzIG5vdCBleGlzdCcgfSk7XHJcblxyXG4gICAgLy92YWxpZGF0ZSBwd1xyXG4gICAgQmNyeXB0LmNvbXBhcmUocGFzc3dvcmQsIHVzZXIucGFzc3dvcmQpICAgLy9wbGFpbiB0eHQgcHcgdnMuIGhhc2hlZCBwd1xyXG4gICAgLnRoZW4oaXNNYXRjaCA9PiB7XHJcbiAgICAgaWYoIWlzTWF0Y2gpIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7bXNnOiAnSW52YWxpZCBjcmVkZW50aWFscyd9KTtcclxuICAgICBjb25zb2xlLmxvZyhwYXNzd29yZCwgJyBwdycpXHJcbiAgICAgY29uc29sZS5sb2codXNlci5wYXNzd29yZCwgJyB1c2VyIHB3JylcclxuICByZXMuanNvbih7c3VjY2VzczogdHJ1ZSwgbWVzc2FnZTogXCJoZXJlJ3MgeW91ciB0b2tlblwiLCB0b2tlbjogdG9rZW4sIHVzZXI6IHVzZXJ9KVxyXG5cclxuICBjb25zb2xlLmxvZyhwYXNzd29yZCwgJyBwdycpXHJcbiAgY29uc29sZS5sb2codXNlci5wYXNzd29yZCwgJyB1c2VyIHB3JylcclxufSlcclxuLmNhdGNoKGVyciA9PiB7XHJcbiAgY29uc29sZS5sb2coZXJyKVxyXG59KVxyXG4gIH0pXHJcbn0pO1xyXG5cclxuXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "auth.js"
      ],
      "names": [
        "router",
        "require",
        "Router",
        "config",
        "User",
        "Bcrypt",
        "jwt",
        "token",
        "process",
        "env",
        "JWT_SECRET",
        "route",
        "post",
        "req",
        "res",
        "user",
        "username",
        "password",
        "body",
        "payload",
        "id",
        "_id",
        "options",
        "expiresIn",
        "secret",
        "sign",
        "console",
        "log",
        "findOne",
        "then",
        "status",
        "json",
        "msg",
        "compare",
        "isMatch",
        "success",
        "message",
        "catch",
        "err",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAP,CAAmBC,MAAnB,EAAf;;AACAD,OAAO,CAAC,QAAD,CAAP,CAAkBE,MAAlB,G,CAA4B;;;AAC5B,IAAIC,IAAI,GAAGH,OAAO,CAAC,sBAAD,CAAlB;;AACA,MAAMI,MAAM,GAAGJ,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMK,GAAG,GAAGL,OAAO,CAAC,cAAD,CAAnB;;AACA,MAAMM,KAAK,GAAGC,OAAO,CAACC,GAAR,CAAYC,UAA1B,C,CAGA;;AACAV,MAAM,CAACW,KAAP,CAAa,GAAb,EAAkBC,IAAlB,CAAuB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACzC,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAAuBJ,GAAG,CAACK,IAAjC;AACA,QAAMC,OAAO,GAAG;AAAEC,IAAAA,EAAE,EAAEL,IAAI,CAACM;AAAX,GAAhB;AACA,QAAMC,OAAO,GAAG;AAACC,IAAAA,SAAS,EAAE;AAAZ,GAAhB;AACA,QAAMC,MAAM,GAAGhB,OAAO,CAACC,GAAR,CAAYC,UAA3B;AACA,QAAMH,KAAK,GAAGD,GAAG,CAACmB,IAAJ,CAASN,OAAT,EAAkBK,MAAlB,EAA0BF,OAA1B,CAAd;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYpB,KAAZ,EAAmB,cAAnB;AAEAH,EAAAA,IAAI,CAACwB,OAAL,CAAa;AAAEZ,IAAAA;AAAF,GAAb,EACA;AADA,GAECa,IAFD,CAEMd,IAAI,IAAI;AACZ;AACA,QAAG,CAACA,IAAJ,EAAU,OAAOD,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAArB,CAAP,CAFE,CAIZ;;AACA3B,IAAAA,MAAM,CAAC4B,OAAP,CAAehB,QAAf,EAAyBF,IAAI,CAACE,QAA9B,EAA0C;AAA1C,KACCY,IADD,CACMK,OAAO,IAAI;AAChB,UAAG,CAACA,OAAJ,EAAa,OAAOpB,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,QAAAA,GAAG,EAAE;AAAN,OAArB,CAAP;AACbN,MAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ,EAAsB,KAAtB;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAI,CAACE,QAAjB,EAA2B,UAA3B;AACHH,MAAAA,GAAG,CAACiB,IAAJ,CAAS;AAACI,QAAAA,OAAO,EAAE,IAAV;AAAgBC,QAAAA,OAAO,EAAE,mBAAzB;AAA8C7B,QAAAA,KAAK,EAAEA,KAArD;AAA4DQ,QAAAA,IAAI,EAAEA;AAAlE,OAAT;AAEAW,MAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ,EAAsB,KAAtB;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAI,CAACE,QAAjB,EAA2B,UAA3B;AACD,KATG,EAUHoB,KAVG,CAUGC,GAAG,IAAI;AACZZ,MAAAA,OAAO,CAACC,GAAR,CAAYW,GAAZ;AACD,KAZG;AAaD,GApBD;AAqBD,CA7BD;AAiCAC,MAAM,CAACC,OAAP,GAAiBxC,MAAjB",
      "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\routes\\",
      "sourcesContent": [
        "const router = require('express').Router();\r\nrequire('dotenv').config(); //env variables can be in the dotenv file.\r\nlet User = require('../models/user.model');\r\nconst Bcrypt = require(\"bcryptjs\");\r\nconst jwt = require(\"jsonwebtoken\");\r\nconst token = process.env.JWT_SECRET;\r\n\r\n\r\n//LOGIN USER\r\nrouter.route('/').post((req, res, user) => {\r\n  const {username, password} = req.body;\r\n  const payload = { id: user._id };\r\n  const options = {expiresIn: 3600};\r\n  const secret = process.env.JWT_SECRET;\r\n  const token = jwt.sign(payload, secret, options);\r\n  console.log(token, ' login token')\r\n\r\n  User.findOne({ username })\r\n  //VALIDATION CHECKS\r\n  .then(user => {\r\n    //validate user\r\n    if(!user) return res.status(400).json({ msg: 'User does not exist' });\r\n\r\n    //validate pw\r\n    Bcrypt.compare(password, user.password)   //plain txt pw vs. hashed pw\r\n    .then(isMatch => {\r\n     if(!isMatch) return res.status(400).json({msg: 'Invalid credentials'});\r\n     console.log(password, ' pw')\r\n     console.log(user.password, ' user pw')\r\n  res.json({success: true, message: \"here's your token\", token: token, user: user})\r\n\r\n  console.log(password, ' pw')\r\n  console.log(user.password, ' user pw')\r\n})\r\n.catch(err => {\r\n  console.log(err)\r\n})\r\n  })\r\n});\r\n\r\n\r\n\r\nmodule.exports = router;\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1606875428648
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\\\\middleware\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\",\"filename\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\\\\middleware\\\\auth.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\cchewning\\\\Documents\\\\react-four\\\\backend\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\middleware\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\cchewning\\Documents\\react-four\\backend",
      "filename": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\middleware\\auth.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\cchewning\\Documents\\react-four\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\middleware\\auth.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\middleware\\auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\middleware\\",
        "sourceFileName": "auth.js"
      }
    },
    "ast": null,
    "code": "const jwt = require(\"jsonwebtoken\");\n\nconst secret = process.env.JWT_SECRET;\n\nrequire('dotenv').config(); //env variables can be in the dotenv file.\n//middleware fns call next to go to next middleware\n//function auth(req, res, next) {\n\n\nconst auth = (req, res, next) => {\n  const token = req.header('x-auth-token');\n  console.log(token, '<-- token'); //Check for token\n\n  if (!token) res.status(401).json({\n    msg: 'Authorization denied'\n  }); //401 means unauthorized\n  //Verify token\n\n  try {\n    const decoded = jwt.verify(token, secret); //pass in token. take jwt secret.  .get\n\n    req.username = decoded; //Add user from payload\n\n    next();\n  } catch (e) {\n    res.status(400).json({\n      msg: 'Token is not valid'\n    });\n  }\n};\n\nmodule.exports = auth;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGguanMiXSwibmFtZXMiOlsiand0IiwicmVxdWlyZSIsInNlY3JldCIsInByb2Nlc3MiLCJlbnYiLCJKV1RfU0VDUkVUIiwiY29uZmlnIiwiYXV0aCIsInJlcSIsInJlcyIsIm5leHQiLCJ0b2tlbiIsImhlYWRlciIsImNvbnNvbGUiLCJsb2ciLCJzdGF0dXMiLCJqc29uIiwibXNnIiwiZGVjb2RlZCIsInZlcmlmeSIsInVzZXJuYW1lIiwiZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEdBQUcsR0FBR0MsT0FBTyxDQUFDLGNBQUQsQ0FBbkI7O0FBQ0EsTUFBTUMsTUFBTSxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsVUFBM0I7O0FBRUFKLE9BQU8sQ0FBQyxRQUFELENBQVAsQ0FBa0JLLE1BQWxCLEcsQ0FBNEI7QUFFNUI7QUFDQTs7O0FBQ0EsTUFBTUMsSUFBSSxHQUFHLENBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEtBQW9CO0FBQy9CLFFBQU1DLEtBQUssR0FBR0gsR0FBRyxDQUFDSSxNQUFKLENBQVcsY0FBWCxDQUFkO0FBQ0ZDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSCxLQUFaLEVBQW1CLFdBQW5CLEVBRmlDLENBR2pDOztBQUNBLE1BQUksQ0FBQ0EsS0FBTCxFQUFZRixHQUFHLENBQUNNLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFFQyxJQUFBQSxHQUFHLEVBQUU7QUFBUCxHQUFyQixFQUpxQixDQUlpQztBQUVsRTs7QUFDQSxNQUFJO0FBQ0YsVUFBTUMsT0FBTyxHQUFHbEIsR0FBRyxDQUFDbUIsTUFBSixDQUFXUixLQUFYLEVBQWtCVCxNQUFsQixDQUFoQixDQURFLENBQ3lDOztBQUUzQ00sSUFBQUEsR0FBRyxDQUFDWSxRQUFKLEdBQWVGLE9BQWYsQ0FIRSxDQUdzQjs7QUFDdEJSLElBQUFBLElBQUk7QUFDUCxHQUxELENBS0UsT0FBTVcsQ0FBTixFQUFTO0FBQ1RaLElBQUFBLEdBQUcsQ0FBQ00sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQUVDLE1BQUFBLEdBQUcsRUFBRTtBQUFQLEtBQXJCO0FBQ0Q7QUFHQSxDQWpCRDs7QUFtQkFLLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmhCLElBQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcY2NoZXduaW5nXFxEb2N1bWVudHNcXHJlYWN0LWZvdXJcXGJhY2tlbmRcXG1pZGRsZXdhcmVcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGp3dCA9IHJlcXVpcmUoXCJqc29ud2VidG9rZW5cIik7XHJcbmNvbnN0IHNlY3JldCA9IHByb2Nlc3MuZW52LkpXVF9TRUNSRVQ7XHJcblxyXG5yZXF1aXJlKCdkb3RlbnYnKS5jb25maWcoKTsgLy9lbnYgdmFyaWFibGVzIGNhbiBiZSBpbiB0aGUgZG90ZW52IGZpbGUuXHJcblxyXG4vL21pZGRsZXdhcmUgZm5zIGNhbGwgbmV4dCB0byBnbyB0byBuZXh0IG1pZGRsZXdhcmVcclxuLy9mdW5jdGlvbiBhdXRoKHJlcSwgcmVzLCBuZXh0KSB7XHJcbmNvbnN0IGF1dGggPSAocmVxLCByZXMsIG5leHQpID0+IHtcclxuICBjb25zdCB0b2tlbiA9IHJlcS5oZWFkZXIoJ3gtYXV0aC10b2tlbicpO1xyXG5jb25zb2xlLmxvZyh0b2tlbiwgJzwtLSB0b2tlbicpXHJcbi8vQ2hlY2sgZm9yIHRva2VuXHJcbmlmICghdG9rZW4pIHJlcy5zdGF0dXMoNDAxKS5qc29uKHsgbXNnOiAnQXV0aG9yaXphdGlvbiBkZW5pZWQnfSkgIC8vNDAxIG1lYW5zIHVuYXV0aG9yaXplZFxyXG5cclxuLy9WZXJpZnkgdG9rZW5cclxudHJ5IHtcclxuICBjb25zdCBkZWNvZGVkID0gand0LnZlcmlmeSh0b2tlbiwgc2VjcmV0KTsgLy9wYXNzIGluIHRva2VuLiB0YWtlIGp3dCBzZWNyZXQuICAuZ2V0XHJcblxyXG4gIHJlcS51c2VybmFtZSA9IGRlY29kZWQ7IC8vQWRkIHVzZXIgZnJvbSBwYXlsb2FkXHJcbiAgICBuZXh0KCk7XHJcbn0gY2F0Y2goZSkge1xyXG4gIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgbXNnOiAnVG9rZW4gaXMgbm90IHZhbGlkJ30pXHJcbn1cclxuXHJcblxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGF1dGg7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "auth.js"
      ],
      "names": [
        "jwt",
        "require",
        "secret",
        "process",
        "env",
        "JWT_SECRET",
        "config",
        "auth",
        "req",
        "res",
        "next",
        "token",
        "header",
        "console",
        "log",
        "status",
        "json",
        "msg",
        "decoded",
        "verify",
        "username",
        "e",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,UAA3B;;AAEAJ,OAAO,CAAC,QAAD,CAAP,CAAkBK,MAAlB,G,CAA4B;AAE5B;AACA;;;AACA,MAAMC,IAAI,GAAG,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAC/B,QAAMC,KAAK,GAAGH,GAAG,CAACI,MAAJ,CAAW,cAAX,CAAd;AACFC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAmB,WAAnB,EAFiC,CAGjC;;AACA,MAAI,CAACA,KAAL,EAAYF,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAArB,EAJqB,CAIiC;AAElE;;AACA,MAAI;AACF,UAAMC,OAAO,GAAGlB,GAAG,CAACmB,MAAJ,CAAWR,KAAX,EAAkBT,MAAlB,CAAhB,CADE,CACyC;;AAE3CM,IAAAA,GAAG,CAACY,QAAJ,GAAeF,OAAf,CAHE,CAGsB;;AACtBR,IAAAA,IAAI;AACP,GALD,CAKE,OAAMW,CAAN,EAAS;AACTZ,IAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAArB;AACD;AAGA,CAjBD;;AAmBAK,MAAM,CAACC,OAAP,GAAiBhB,IAAjB",
      "sourceRoot": "C:\\Users\\cchewning\\Documents\\react-four\\backend\\middleware\\",
      "sourcesContent": [
        "const jwt = require(\"jsonwebtoken\");\r\nconst secret = process.env.JWT_SECRET;\r\n\r\nrequire('dotenv').config(); //env variables can be in the dotenv file.\r\n\r\n//middleware fns call next to go to next middleware\r\n//function auth(req, res, next) {\r\nconst auth = (req, res, next) => {\r\n  const token = req.header('x-auth-token');\r\nconsole.log(token, '<-- token')\r\n//Check for token\r\nif (!token) res.status(401).json({ msg: 'Authorization denied'})  //401 means unauthorized\r\n\r\n//Verify token\r\ntry {\r\n  const decoded = jwt.verify(token, secret); //pass in token. take jwt secret.  .get\r\n\r\n  req.username = decoded; //Add user from payload\r\n    next();\r\n} catch(e) {\r\n  res.status(400).json({ msg: 'Token is not valid'})\r\n}\r\n\r\n\r\n}\r\n\r\nmodule.exports = auth;\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1606854391559
  }
}